var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AlertComponent.html",[0,1.602,1,1.602]],["body/components/AlertComponent.html",[0,1.823,1,2.646,2,3.07,3,0.338,4,2.059,5,2.749,6,0.279,7,0.279,8,0.17,9,0.17,10,3.348,11,2.749,12,2.749,13,2.749,14,3.989,15,3.585,16,2.354,17,3.348,18,3.348,19,3.348,20,3.348,21,0.223,22,1.712,23,3.07,24,1.818,25,4.367,26,4.367,27,0.894,28,4.86,29,3.416,30,1.388,31,1.627,32,1.064,33,2.059,34,3.348,35,1.823,36,3.585,37,0.696,38,0.041,39,1.249,40,0.775,41,3.348,42,3.348,43,3.348,44,2.749,45,1.627,46,2.988,47,2.685,48,1.712,49,1.712,50,3.348,51,3.348,52,3.348,53,2.749,54,3.348,55,2.354,56,1.064,57,3.348,58,2.059,59,2.685,60,2.749,61,4.228,62,2.749,63,3.348,64,2.749,65,3.348,66,2.749,67,1.388,68,2.749,69,1.627,70,2.749,71,2.749,72,0.023,73,0.03,74,0.023]],["title/injectables/AlertService.html",[75,1.153,76,2.068]],["body/injectables/AlertService.html",[3,0.401,6,0.331,7,0.331,8,0.202,9,0.202,16,2.795,21,0.265,24,1.718,27,0.996,30,1.264,31,1.932,32,1.264,37,0.634,38,0.038,39,1.137,40,0.776,67,1.547,72,0.027,73,0.033,74,0.027,76,2.795,77,1.403,78,3.976,79,4.868,80,3.976,81,5.261,82,4.868,83,4.868,84,4.501,85,1.718,86,1.718,87,3.976,88,3.422,89,3.976,90,1.403,91,3.264,92,2.445,93,3.976,94,3.976,95,3.976,96,3.264,97,1.558,98,2.795,99,3.976]],["title/classes/AppPage.html",[100,1.809,101,2.415]],["body/classes/AppPage.html",[3,0.451,6,0.372,21,0.298,27,1.069,37,0.832,38,0.039,72,0.03,73,0.036,74,0.03,101,3.668,102,2.748,103,4.469,104,5.53,105,5.53]],["title/interfaces/CacheEntry.html",[106,1.809,107,2.415]],["body/interfaces/CacheEntry.html",[3,0.429,6,0.355,7,0.355,8,0.216,9,0.216,21,0.284,22,1.988,38,0.039,40,0.864,72,0.029,73,0.035,74,0.029,107,3.495,108,2.318,109,1.503,110,2.618,111,2.993,112,5.419,113,4.449,114,2.362,115,4.165,116,4.165,117,1.303]],["title/interfaces/Observable.html",[106,1.809,118,1.153]],["body/interfaces/Observable.html",[3,0.444,6,0.367,7,0.367,8,0.223,9,0.223,21,0.293,22,2.028,38,0.037,40,0.701,72,0.03,73,0.035,74,0.03,108,2.396,117,1.328,118,1.725,119,3.093,120,2.706,121,3.093,122,3.863,123,3.379]],["title/injectables/PLWorkerService.html",[75,1.153,124,2.068]],["body/injectables/PLWorkerService.html",[3,0.322,6,0.266,7,0.266,8,0.162,9,0.162,21,0.213,24,1.784,27,0.866,32,1.015,35,1.739,37,0.675,38,0.04,39,1.21,40,0.757,45,2.057,48,1.251,49,1.251,56,1.015,67,1.345,72,0.022,73,0.029,74,0.022,77,1.127,85,1.676,86,1.494,88,2.975,90,1.127,97,1.861,109,1.127,114,1.391,117,1.298,124,2.244,125,3.193,126,1.391,127,4.232,128,4.232,129,3.193,130,2.621,131,4.232,132,4.232,133,2.621,134,3.554,135,4.232,136,3.193,137,1.391,138,4.232,139,2.753,140,2.307,141,2.621,142,2.585,143,4.232,144,3.193,145,2.305,146,4.232,147,4.232,148,2.244,149,3.193,150,1.963,151,1.963,152,2.602,153,3.193,154,2.621,155,3.193,156,1.739,157,2.621,158,2.602,159,1.552,160,1.391,161,2.305,162,2.057,163,1.552,164,2.602,165,2.621,166,1.963,167,2.621,168,2.621,169,3.193,170,1.963,171,1.963,172,2.244,173,2.621,174,2.621,175,3.193,176,3.193,177,2.621,178,2.621,179,3.474,180,2.621,181,3.193,182,2.621,183,3.193]],["title/injectables/PlAmbientModeLoaderService.html",[75,1.153,184,1.809]],["body/injectables/PlAmbientModeLoaderService.html",[3,0.437,6,0.361,7,0.361,8,0.22,9,0.22,21,0.289,24,1.81,27,1.05,37,0.817,38,0.038,72,0.03,73,0.035,74,0.03,77,1.53,109,1.53,118,1.699,126,1.889,184,2.665,185,3.558,186,3.558,187,5.461,188,5.461,189,2.665]],["title/components/PlBaseComponent.html",[0,1.602,69,1.43]],["body/components/PlBaseComponent.html",[0,1.292,1,1.292,2,2.421,3,0.239,4,1.459,5,1.948,6,0.198,7,0.198,8,0.12,9,0.12,11,1.948,12,1.948,13,1.948,14,2.827,15,1.948,21,0.158,22,1.35,27,0.705,29,2.85,30,0.754,35,1.292,37,0.846,38,0.041,39,1.517,40,0.907,46,2.118,47,3.201,48,2.14,49,2.14,56,1.095,58,1.459,59,2.118,60,1.948,61,3.651,62,1.948,67,1.501,68,1.948,69,1.97,70,1.948,71,1.948,72,0.016,73,0.023,74,0.016,84,3.328,85,1.431,86,1.431,97,0.93,114,1.034,117,0.884,124,1.668,134,2.421,137,1.034,158,2.118,159,1.153,160,1.034,161,1.292,162,1.153,163,1.153,190,2.373,191,2.373,192,1.668,193,2.373,194,2.373,195,2.373,196,2.373,197,2.373,198,2.373,199,2.373,200,2.373,201,5.903,202,3.444,203,3.444,204,3.444,205,3.444,206,2.421,207,3.444,208,3.127,209,3.444,210,3.444,211,4.054,212,3.444,213,3.444,214,3.444,215,4.054,216,4.054,217,4.054,218,4.054,219,4.054,220,3.444,221,4.054,222,2.373,223,2.373,224,3.444,225,2.735,226,2.373,227,2.827,228,2.373,229,2.373,230,1.668,231,2.373,232,3.444,233,2.373,234,4.054,235,2.493,236,4.054,237,4.054,238,1.668,239,1.459,240,1.668,241,2.373,242,1.668]],["title/injectables/PlCacheMapService.html",[75,1.153,243,2.415]],["body/injectables/PlCacheMapService.html",[3,0.407,6,0.336,7,0.336,8,0.204,9,0.204,21,0.269,24,1.944,27,1.005,37,0.783,38,0.04,39,1.153,40,0.783,47,2.479,67,1.56,72,0.027,73,0.033,74,0.027,77,1.423,85,1.733,86,1.733,109,1.423,110,2.479,111,2.834,116,4.346,126,1.757,137,1.757,243,3.31,244,4.032,245,4.032,246,4.03,247,4.032,248,4.523,249,4.909,250,4.032,251,4.909]],["title/modules/PlCoreModule.html",[252,2.068,253,1.809]],["body/modules/PlCoreModule.html",[1,2.973,3,0.362,6,0.299,7,0.299,8,0.231,9,0.231,27,0.735,31,1.745,32,1.452,37,0.572,38,0.04,56,1.452,58,2.207,69,2.816,72,0.024,73,0.031,74,0.024,90,1.267,150,2.207,164,2.207,184,3.251,230,2.524,252,2.524,253,3.632,254,2.524,255,2.207,256,3.749,257,2.207,258,3.749,259,3.749,260,2.947,261,2.947,262,2.947,263,2.947,264,3.251,265,3.749,266,2.947,267,2.947,268,2.524,269,3.59,270,3.59,271,2.947,272,3.749,273,3.59,274,3.59,275,3.59,276,1.955,277,3.59,278,2.947,279,2.207,280,3.59,281,1.745,282,2.947,283,1.955,284,3.59]],["title/classes/PlCoreUtils.html",[100,1.809,285,2.415]],["body/classes/PlCoreUtils.html",[3,0.376,6,0.311,7,0.311,8,0.237,9,0.237,21,0.248,22,1.834,27,0.958,30,1.487,32,1.185,37,0.594,38,0.04,39,1.338,40,0.594,48,1.462,49,1.462,56,1.704,72,0.025,73,0.032,74,0.025,90,1.316,92,3.143,102,2.293,137,1.625,160,1.625,163,2.274,225,2.293,268,2.622,271,4.401,281,1.812,285,3.061,286,3.061,287,3.061,288,3.061,289,2.622,290,2.622,291,3.729,292,3.061,293,3.729,294,4.678,295,3.841,296,4.678,297,5.112,298,2.622,299,3.061,300,3.061,301,3.061,302,3.729,303,3.729,304,3.061,305,3.729,306,3.729,307,3.729,308,3.729,309,3.729,310,3.729,311,2.293,312,3.729]],["title/injectables/PlGraphicService.html",[75,1.153,238,2.068]],["body/injectables/PlGraphicService.html",[3,0.247,4,2.94,6,0.294,7,0.204,8,0.124,9,0.124,21,0.163,24,1.96,27,0.721,30,0.779,31,1.191,32,1.12,33,3.155,37,0.794,38,0.04,39,1.008,40,0.818,45,1.191,46,2.167,55,1.722,56,1.435,59,1.506,67,1.631,72,0.017,73,0.024,74,0.017,77,0.865,85,1.811,86,1.811,90,1.457,92,1.506,97,2.096,109,0.865,114,1.799,117,1.159,118,1.874,126,1.068,133,2.011,137,1.967,139,1.919,140,1.191,142,2.712,145,1.919,152,2.775,156,2.604,159,1.191,160,1.068,162,1.191,163,1.191,170,1.506,238,1.722,239,2.538,276,1.334,281,1.191,311,2.538,313,2.45,314,3.524,315,3.524,316,3.388,317,3.524,318,3.524,319,3.524,320,2.45,321,2.011,322,4.512,323,1.506,324,1.722,325,3.388,326,2.011,327,4.39,328,2.011,329,2.011,330,2.893,331,2.011,332,2.011,333,1.722,334,2.011,335,1.722,336,2.011,337,2.477,338,2.011,339,2.011,340,2.893,341,2.893,342,3.173,343,2.893,344,2.011,345,3.705,346,2.477,347,2.011,348,2.011,349,2.011,350,2.011,351,2.011,352,2.011,353,2.011,354,2.011,355,2.011,356,2.011,357,2.011,358,2.011,359,2.893,360,2.477,361,2.011,362,2.011,363,2.011,364,1.722,365,2.011,366,2.011,367,2.011,368,2.011,369,2.011,370,1.722,371,2.011,372,2.011,373,2.011,374,2.011,375,2.011,376,2.011,377,2.011,378,2.893,379,2.011,380,2.011,381,2.011,382,2.011,383,2.011,384,2.011,385,1.506,386,2.011,387,2.011]],["title/interceptors/PlHttpInterceptorMockService.html",[264,1.809,388,2.068]],["body/interceptors/PlHttpInterceptorMockService.html",[3,0.416,6,0.344,7,0.344,8,0.209,9,0.209,21,0.275,27,1.019,30,1.311,37,0.657,38,0.039,40,0.793,67,1.582,72,0.028,73,0.034,74,0.028,85,1.757,86,1.757,117,1.425,118,1.616,248,4.086,264,2.536,388,2.899,389,4.124,390,3.385,391,3.385,392,4.977,393,4.124,394,4.977,395,4.124,396,4.124,397,4.977,398,4.977,399,2.899]],["title/classes/PlHttpRequest.html",[100,1.809,400,1.809]],["body/classes/PlHttpRequest.html",[3,0.272,6,0.225,7,0.225,8,0.137,9,0.137,21,0.18,30,0.857,32,1.199,33,2.898,37,0.819,38,0.04,39,1.47,40,0.858,45,1.311,56,0.857,67,1.677,72,0.018,73,0.026,74,0.018,85,1.862,86,1.862,90,1.536,97,1.944,102,1.659,114,2.299,117,1.117,142,2.055,145,1.469,156,2.055,158,1.659,159,1.834,160,1.644,161,2.055,162,2.29,164,1.659,166,3.16,171,1.659,172,1.896,177,2.214,192,1.896,206,3.059,208,3.313,225,3.05,276,2.055,283,1.469,333,1.896,400,1.659,401,2.697,402,2.697,403,3.773,404,5.139,405,4.219,406,3.773,407,3.869,408,3.773,409,3.097,410,2.697,411,3.869,412,3.773,413,2.697,414,2.697,415,4.072,416,2.697,417,2.697,418,2.697,419,2.697,420,2.697,421,2.214,422,2.697,423,2.214,424,2.214,425,2.652,426,2.697,427,2.214,428,3.097,429,1.896,430,3.097,431,3.097,432,2.697,433,2.697,434,2.697,435,3.059,436,2.697,437,2.214,438,3.097,439,2.697,440,2.697,441,2.697,442,2.652,443,2.697,444,2.697,445,3.097,446,1.896,447,2.214,448,2.214,449,2.697,450,2.697,451,2.697,452,2.697,453,2.697,454,2.214,455,2.697,456,2.214,457,2.697,458,2.697,459,1.896]],["title/injectables/PlHttpService.html",[75,1.153,239,1.809]],["body/injectables/PlHttpService.html",[3,0.184,6,0.388,7,0.152,8,0.092,9,0.092,21,0.121,27,0.578,30,0.579,31,1.372,32,1.238,35,1.538,37,0.819,38,0.041,39,1.33,40,0.831,45,1.68,48,1.107,49,1.107,56,1.603,67,1.657,72,0.012,73,0.019,74,0.012,77,0.643,85,1.84,86,1.84,90,1.375,97,0.714,109,0.643,114,1.231,117,1.482,118,1.823,126,0.794,137,1.507,139,2.428,140,1.68,142,1.538,148,1.281,150,1.12,152,1.736,156,0.992,158,3.527,159,0.885,160,0.794,161,0.992,162,0.885,163,0.885,239,1.12,246,2.318,276,0.992,279,3.285,281,1.372,283,0.992,289,1.281,290,1.281,311,3.248,323,1.12,324,1.281,335,1.281,337,1.985,346,1.281,360,1.281,364,1.281,370,2.963,385,1.12,399,1.985,400,3.419,421,1.496,425,1.985,429,2.431,435,1.985,446,1.985,460,1.822,461,2.824,462,2.318,463,2.824,464,2.824,465,2.824,466,2.824,467,2.824,468,1.822,469,2.824,470,1.822,471,3.895,472,2.824,473,5.444,474,2.824,475,1.822,476,1.822,477,5.214,478,5.043,479,3.793,480,5.343,481,4.459,482,1.822,483,1.822,484,1.822,485,3.895,486,2.318,487,1.496,488,1.822,489,1.822,490,1.822,491,2.431,492,1.822,493,1.822,494,1.822,495,2.318,496,1.822,497,1.496,498,1.496,499,1.822,500,1.822,501,1.822,502,1.496,503,2.318,504,1.496,505,1.496,506,1.822,507,1.822,508,1.822,509,2.318,510,1.822,511,1.822,512,1.496,513,1.496,514,1.822,515,1.822,516,1.822,517,1.822,518,1.822,519,1.822,520,1.822,521,1.822,522,1.822,523,1.822,524,1.822,525,2.824,526,1.822,527,1.822,528,1.822]],["title/injectables/PlNetworkService.html",[75,1.153,240,2.068]],["body/injectables/PlNetworkService.html",[3,0.444,6,0.367,7,0.367,8,0.223,9,0.223,21,0.293,24,1.826,27,1.059,30,1.644,37,0.701,38,0.037,72,0.03,73,0.035,74,0.03,77,1.553,109,1.553,126,1.918,140,2.139,240,3.093,529,4.4,530,5.495]],["title/injectables/PlUtilsService.html",[75,1.153,242,2.068]],["body/injectables/PlUtilsService.html",[3,0.379,6,0.313,7,0.313,8,0.19,9,0.19,21,0.25,22,1.843,24,1.993,27,0.962,30,1.494,37,0.749,38,0.041,39,1.075,48,1.473,49,1.473,66,3.085,72,0.026,73,0.032,74,0.026,77,1.327,109,1.327,118,1.473,126,1.638,130,3.085,139,2.047,140,1.826,235,2.311,242,2.642,531,3.758,532,4.701,533,5.13,534,5.13,535,4.212,536,3.758,537,3.758,538,4.701,539,3.085,540,4.701,541,3.758,542,3.779,543,5.13,544,3.758,545,3.758,546,3.758]],["title/interfaces/Subscriber.html",[106,1.809,547,2.068]],["body/interfaces/Subscriber.html",[3,0.448,6,0.37,7,0.37,8,0.225,9,0.225,21,0.296,22,2.039,38,0.038,40,0.708,72,0.03,73,0.035,74,0.03,108,2.418,117,1.335,119,3.122,120,2.731,121,3.122,123,3.392,547,3.122]],["title/dependencies.html",[255,2.174,548,2.461]],["body/dependencies.html",[8,0.245,9,0.22,23,2.338,38,0.042,72,0.023,73,0.03,74,0.023,123,2.045,189,2.673,255,2.045,257,2.673,549,3.325,550,5.649,551,3.325,552,3.325,553,3.325,554,3.325,555,4.347,556,3.325,557,3.325,558,3.325,559,3.325,560,3.325,561,3.325,562,3.325,563,3.325,564,3.325,565,3.325,566,4.843,567,3.325,568,3.325,569,3.325,570,4.347,571,3.325,572,3.325,573,3.325,574,3.325,575,3.325,576,3.325,577,3.325,578,3.325,579,3.325,580,3.325,581,3.325,582,3.325,583,3.325,584,4.347,585,4.347,586,3.325,587,3.325,588,3.325,589,4.347,590,3.325,591,3.325,592,3.325,593,3.325,594,3.325,595,3.325,596,3.569,597,3.569,598,3.325,599,3.325,600,3.325,601,3.325,602,3.325,603,3.325,604,3.325,605,3.976,606,3.325,607,3.325,608,3.325,609,3.325,610,3.325,611,3.325,612,3.325,613,3.325,614,3.325]],["title/miscellaneous/functions.html",[615,1.513,616,2.903]],["body/miscellaneous/functions.html",[7,0.392,8,0.239,9,0.239,21,0.209,37,0.857,38,0.041,40,0.667,56,0.997,67,1.773,72,0.021,73,0.028,74,0.021,85,1.969,86,1.969,90,1.107,97,1.23,117,1.343,119,2.205,120,2.572,121,2.941,122,2.941,137,1.823,145,1.708,151,1.929,170,1.929,171,1.929,279,1.929,323,1.929,385,1.929,479,2.941,491,2.205,615,1.929,616,2.575,617,4.183,618,3.137,619,4.183,620,5.491,621,4.183,622,4.183,623,4.183,624,3.434,625,4.706,626,4.183,627,3.137,628,3.137,629,3.137,630,3.137,631,3.137,632,3.137,633,3.137,634,3.137,635,4.183,636,4.183,637,3.864,638,4.183,639,3.137,640,3.137,641,3.137,642,3.137,643,3.137,644,2.575,645,3.137,646,3.137,647,3.137,648,4.706,649,3.137,650,3.137,651,2.575,652,3.137,653,3.137,654,2.575,655,2.575,656,3.137,657,2.575,658,3.434,659,2.575]],["title/index.html",[21,0.164,660,2.461,661,2.461]],["body/index.html",[0,0.289,4,1.854,6,0.205,8,0.05,9,0.027,16,0.958,21,0.035,22,0.208,23,0.688,24,0.87,29,0.373,31,2.044,32,1.628,33,3.183,35,2.255,36,0.436,38,0.041,39,0.705,44,0.804,45,2.074,46,0.602,47,1.22,48,0.208,49,0.208,53,0.804,55,0.373,56,1.793,59,0.326,64,0.804,69,0.662,72,0.004,73,0.007,74,0.004,76,0.688,88,0.373,90,1.851,91,1.391,92,2.906,96,1.118,97,1.649,98,0.688,100,1.22,110,1.854,113,0.436,114,1.775,115,1.391,117,0.685,118,0.877,120,0.326,122,1.875,123,0.838,134,0.373,139,0.289,140,0.258,141,0.436,142,2.465,145,1.641,148,1.574,150,0.602,151,0.838,152,1.752,154,1.628,156,2.324,157,1.391,159,0.476,160,0.427,161,1.453,162,0.823,163,1.538,164,1.377,165,0.436,166,1.945,167,0.436,168,1.118,170,2.41,171,0.326,172,0.688,173,1.118,174,0.804,178,0.436,179,0.804,180,0.804,182,1.118,189,1.516,192,1.191,206,1.574,208,0.373,225,1.752,227,1.118,230,1.191,235,1.64,257,0.326,272,0.436,276,1.865,278,2.475,279,0.838,281,1.943,283,1.219,287,0.436,288,0.436,289,2.489,290,1.191,292,1.838,295,0.436,299,0.436,300,1.118,301,1.118,304,0.804,311,1.042,316,0.436,321,0.436,322,1.838,323,2.504,324,1.191,325,1.118,326,0.436,327,2.597,328,1.838,329,0.804,330,1.118,331,1.391,332,1.391,333,2.119,334,0.436,335,1.191,336,0.436,337,1.191,338,0.436,339,0.436,340,0.804,341,1.628,342,1.733,343,0.804,344,0.436,345,1.118,346,1.733,347,0.436,348,0.436,349,0.436,350,0.436,351,0.804,352,1.628,353,0.436,354,1.118,355,1.118,356,1.391,357,0.436,358,0.804,359,0.804,360,0.688,361,2.34,362,0.436,363,0.804,364,1.733,365,1.118,366,0.436,367,0.804,368,0.436,369,0.436,370,1.191,371,0.436,372,0.804,373,0.436,374,0.436,375,0.436,376,0.436,377,0.436,378,0.804,379,0.436,380,2.024,381,0.804,382,0.804,383,0.436,384,0.436,385,1.22,386,0.436,387,0.436,399,0.688,400,2.177,405,0.436,407,1.118,409,1.118,415,0.436,423,2.34,424,3.218,425,0.373,427,0.436,428,2.709,429,1.394,430,3.074,431,2.812,435,2.408,437,1.118,438,0.436,442,2.003,445,0.436,446,2.224,447,0.804,448,0.804,454,1.118,456,0.436,459,2.119,462,0.436,479,0.373,486,1.118,487,1.391,491,1.191,495,0.436,497,1.628,498,1.118,502,1.628,503,2.19,504,0.436,505,0.436,509,2.906,512,0.436,513,1.118,535,0.804,539,0.804,542,0.688,547,0.373,596,1.118,597,0.436,605,0.804,624,0.436,637,0.804,644,0.804,651,0.804,654,0.436,655,0.436,657,0.436,658,0.436,659,0.436,662,0.531,663,0.979,664,1.362,665,0.979,666,0.531,667,0.531,668,0.531,669,0.979,670,0.531,671,0.531,672,0.979,673,0.531,674,0.531,675,0.531,676,0.531,677,0.531,678,0.979,679,0.531,680,1.362,681,0.531,682,0.531,683,0.531,684,0.979,685,0.531,686,0.531,687,0.531,688,0.979,689,1.362,690,0.531,691,0.531,692,0.531,693,0.531,694,2.239,695,0.531,696,0.979,697,0.531,698,0.531,699,0.531,700,1.362,701,0.979,702,0.531,703,1.362,704,0.531,705,0.531,706,1.362,707,1.694,708,0.531,709,0.531,710,0.531,711,0.531,712,0.531,713,0.531,714,0.531,715,2.465,716,0.531,717,0.979,718,0.531,719,0.531,720,0.531,721,0.531,722,0.979,723,0.979,724,0.531,725,0.531,726,0.531,727,3.014,728,0.531,729,0.531,730,1.362,731,0.531,732,0.979,733,0.531,734,0.531,735,0.531,736,3.425,737,0.531,738,1.362,739,0.531,740,0.531,741,0.979,742,0.531,743,0.531,744,1.362,745,0.531,746,0.979,747,0.531,748,0.531,749,0.531,750,0.531,751,0.531,752,0.531,753,0.531,754,0.979,755,0.531,756,0.531,757,0.531,758,0.531,759,0.531,760,0.979,761,0.531,762,0.531,763,0.531,764,0.979,765,0.979,766,0.531,767,0.531,768,0.531,769,0.531,770,0.531,771,0.531,772,0.531,773,0.531,774,0.979,775,0.979,776,0.979,777,0.531,778,0.531,779,0.531,780,0.531,781,0.531,782,0.531,783,1.984,784,0.531,785,0.531,786,0.531,787,0.979,788,0.531,789,0.531,790,0.531,791,0.531,792,0.531,793,3.54,794,0.531,795,0.531,796,0.979,797,0.979,798,1.694,799,0.531,800,1.362,801,0.531,802,0.531,803,0.979,804,2.465,805,0.979,806,1.694,807,3.835,808,3.646,809,1.984,810,0.979,811,0.979,812,0.531,813,0.531,814,0.531,815,0.531,816,0.979,817,0.979,818,0.979,819,1.362,820,0.979,821,0.979,822,0.979,823,0.531,824,0.979,825,1.362,826,0.979,827,0.531,828,0.531,829,0.531,830,0.531,831,0.531,832,0.531,833,1.694,834,0.979,835,0.979,836,1.362,837,1.391,838,1.362,839,1.362,840,0.979,841,1.984,842,0.531,843,0.979,844,1.362,845,0.531,846,0.531,847,0.531,848,0.531,849,0.531,850,0.531,851,0.531,852,0.531,853,0.531,854,0.979,855,0.979,856,0.531,857,0.979,858,0.531,859,0.531,860,0.979,861,0.531,862,1.984,863,0.979,864,0.979,865,0.531,866,1.694,867,0.531,868,1.694,869,1.362,870,0.979,871,0.531,872,0.531,873,0.531,874,1.362,875,0.531,876,1.362,877,0.531,878,0.979,879,2.465,880,0.531,881,0.531,882,0.979,883,0.531,884,0.979,885,0.531,886,0.531,887,0.979,888,0.531,889,0.531,890,0.531,891,0.531,892,0.531,893,0.531,894,0.979,895,0.531,896,0.531,897,0.979,898,0.531,899,0.531,900,0.531,901,0.531,902,0.979,903,0.531,904,0.531,905,0.979,906,0.531,907,0.979,908,0.979,909,0.531,910,2.668,911,0.804,912,2.668,913,0.979,914,0.804,915,0.979,916,0.531,917,1.984,918,0.531,919,0.531,920,1.694,921,0.531,922,0.531,923,0.531,924,0.531,925,0.531,926,0.531,927,0.979,928,0.531,929,0.531,930,0.531,931,0.531,932,0.531,933,0.531,934,0.531,935,0.531,936,0.531,937,0.531,938,0.531,939,0.531,940,0.979,941,0.531,942,0.531,943,0.531,944,0.979,945,0.531,946,0.531,947,1.984,948,1.362,949,0.531,950,0.979,951,0.979,952,0.531,953,0.531,954,1.984,955,0.531,956,0.531,957,0.531,958,0.531,959,0.531,960,1.362,961,0.531,962,0.979,963,0.531,964,0.531,965,0.531,966,0.531,967,0.531,968,0.531,969,0.531,970,0.531,971,0.531,972,0.531,973,0.531,974,0.531,975,0.531,976,1.694,977,0.531,978,0.531,979,0.531,980,0.531,981,0.531,982,0.436,983,0.979,984,0.979,985,0.531,986,0.531,987,0.531,988,0.531,989,0.979,990,0.531,991,0.531,992,0.531,993,0.979,994,0.531,995,0.531,996,0.531,997,0.531,998,0.531,999,0.531,1000,0.531,1001,0.531,1002,0.531,1003,1.694,1004,0.531,1005,0.531,1006,0.531,1007,0.531,1008,0.531,1009,0.531,1010,0.531,1011,0.531,1012,0.531,1013,0.979,1014,0.531,1015,0.531,1016,0.531,1017,0.979,1018,0.531,1019,0.531,1020,0.531,1021,0.531,1022,0.531,1023,0.531,1024,0.531,1025,0.531,1026,0.531,1027,0.531,1028,0.531,1029,0.531,1030,0.531,1031,0.531,1032,0.531,1033,0.979,1034,0.531,1035,0.979,1036,0.531,1037,0.531,1038,0.531,1039,0.531,1040,0.979,1041,0.531,1042,0.531,1043,0.979,1044,0.531,1045,0.979,1046,0.531,1047,0.531,1048,0.979,1049,0.979,1050,0.531,1051,0.979,1052,0.531,1053,0.979,1054,0.979,1055,0.531,1056,0.979,1057,0.979,1058,0.531,1059,0.531,1060,0.531,1061,0.531,1062,0.531,1063,0.531,1064,0.531,1065,0.979,1066,0.531,1067,0.531,1068,0.531,1069,0.531,1070,0.531,1071,0.979,1072,0.531,1073,0.531,1074,3.014,1075,0.531,1076,0.531,1077,0.531,1078,0.531,1079,0.531,1080,0.531,1081,0.531,1082,0.979,1083,0.531,1084,0.531,1085,0.531,1086,0.531,1087,0.531,1088,0.531,1089,0.804,1090,0.531,1091,0.979,1092,0.531,1093,0.979,1094,0.531,1095,0.531,1096,0.531,1097,0.531,1098,0.531,1099,0.531,1100,0.531,1101,0.979,1102,0.531,1103,0.531,1104,0.531,1105,0.531,1106,0.531,1107,0.531,1108,0.531,1109,0.531,1110,0.531,1111,0.979,1112,0.531,1113,0.531,1114,0.531,1115,0.531,1116,0.531,1117,0.531,1118,0.531,1119,0.531,1120,0.531,1121,0.531,1122,0.531,1123,0.531,1124,0.531,1125,0.531,1126,0.531,1127,0.531,1128,0.531,1129,0.531,1130,0.531,1131,0.979,1132,0.531,1133,0.531,1134,0.531,1135,0.979,1136,0.531,1137,0.979,1138,0.531,1139,0.531,1140,0.531,1141,0.531,1142,0.531,1143,0.531,1144,0.979,1145,0.531,1146,0.531,1147,0.531,1148,0.979,1149,0.531,1150,0.979,1151,0.531,1152,0.531,1153,0.531,1154,0.531,1155,0.531,1156,0.531,1157,0.531,1158,0.531,1159,0.531,1160,0.531,1161,0.531,1162,0.531,1163,0.531,1164,0.979,1165,0.531,1166,0.531,1167,0.531,1168,0.531,1169,0.531,1170,0.531,1171,0.979,1172,0.531,1173,0.531,1174,1.362,1175,0.531,1176,0.531,1177,0.531,1178,0.531,1179,0.531,1180,0.531,1181,0.531,1182,0.531,1183,0.531,1184,0.531,1185,0.531,1186,0.531,1187,0.531,1188,0.531,1189,0.531,1190,0.531,1191,0.531,1192,0.531,1193,0.531,1194,0.531,1195,0.531,1196,0.531,1197,0.979,1198,0.531,1199,0.531,1200,0.531,1201,0.531,1202,0.531,1203,0.531,1204,0.979,1205,0.531,1206,0.531,1207,0.531,1208,0.531,1209,0.531,1210,0.531,1211,0.979,1212,0.531,1213,0.531,1214,0.531,1215,0.531,1216,0.531,1217,0.531,1218,0.531,1219,0.979,1220,0.531,1221,0.531,1222,0.531,1223,0.531,1224,0.531,1225,0.531,1226,0.531,1227,0.531,1228,0.531,1229,0.531,1230,0.531,1231,0.531,1232,0.531,1233,0.531,1234,0.531,1235,0.531,1236,0.531,1237,0.531,1238,0.531,1239,0.531,1240,0.531,1241,0.531,1242,0.531,1243,0.436,1244,0.531,1245,0.436,1246,0.531,1247,0.979,1248,0.531,1249,0.979,1250,0.531,1251,0.531,1252,0.531,1253,0.979,1254,0.531,1255,0.531,1256,0.531,1257,0.531,1258,0.531,1259,0.531,1260,0.531,1261,0.531,1262,0.531,1263,0.531,1264,0.531,1265,0.531,1266,0.531,1267,0.531]],["title/modules.html",[254,2.816]],["body/modules.html",[38,0.036,72,0.032,73,0.036,74,0.032,189,2.854,253,2.854,254,3.263,342,3.263,1268,4.641,1269,4.641]],["title/overview.html",[1270,3.288]],["body/overview.html",[1,2.865,2,2.795,38,0.039,58,2.445,69,2.817,72,0.027,73,0.033,74,0.027,77,1.403,102,2.445,108,2.165,184,3.235,252,3.422,253,3.666,255,2.445,256,3.264,257,2.445,258,3.264,259,3.264,260,3.264,261,3.264,262,3.264,263,3.264,264,3.235,265,3.996,266,3.264,267,3.264,542,2.795,982,3.264,1270,3.264,1271,3.976,1272,3.976,1273,3.976]],["title/interfaces/progressBarsInterface.html",[106,1.809,298,2.068]],["body/interfaces/progressBarsInterface.html",[3,0.453,6,0.375,7,0.375,8,0.266,9,0.266,38,0.036,40,0.717,72,0.031,73,0.036,74,0.031,108,2.448,117,1.154,268,3.161,286,3.691,298,3.161,411,3.691,1274,4.496,1275,4.496]],["title/miscellaneous/variables.html",[615,1.513,1276,2.903]],["body/miscellaneous/variables.html",[7,0.436,8,0.265,9,0.265,21,0.232,32,1.108,38,0.04,40,0.715,48,2.17,49,2.17,72,0.024,73,0.031,74,0.024,98,3.151,109,1.582,110,3.216,111,3.483,151,2.143,166,2.143,185,4.293,186,4.293,235,3.326,281,1.694,282,2.862,283,1.898,388,3.151,390,2.862,391,3.68,442,2.451,459,2.451,615,2.143,837,2.862,911,3.68,914,3.68,1089,3.68,1243,3.68,1245,3.68,1276,2.862,1277,5.537,1278,4.482,1279,4.482,1280,4.482,1281,3.486,1282,3.486,1283,3.486,1284,3.486,1285,3.486,1286,3.486,1287,3.486,1288,3.486,1289,3.486,1290,3.486,1291,3.486]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":539,"title":{},"body":{"injectables/PlUtilsService.html":{},"index.html":{}}}],["0.5.2",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["0.5.7",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":542,"title":{},"body":{"injectables/PlUtilsService.html":{},"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["1.16.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":823,"title":{},"body":{"index.html":{}}}],["10,idajax",{"_index":815,"title":{},"body":{"index.html":{}}}],["11.0.1",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1271,"title":{},"body":{"overview.html":{}}}],["2.2.5",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["2.6.12",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["2.9.4",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":982,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.1.0",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["300000",{"_index":913,"title":{},"body":{"index.html":{}}}],["4",{"_index":1273,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["5.15.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1200,"title":{},"body":{"index.html":{}}}],["6.3.3",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":1098,"title":{},"body":{"index.html":{}}}],["7.2.0",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1272,"title":{},"body":{"overview.html":{}}}],["abilitare",{"_index":1027,"title":{},"body":{"index.html":{}}}],["abilitazione",{"_index":855,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":403,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["accetta",{"_index":146,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["activatedroute",{"_index":241,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["actual_component",{"_index":71,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["ad",{"_index":430,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["adattato",{"_index":734,"title":{},"body":{"index.html":{}}}],["aftercontentchecked",{"_index":197,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["aftercontentinit",{"_index":196,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["afterviewchecked",{"_index":199,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["afterviewinit",{"_index":198,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["aggiornamenti",{"_index":926,"title":{},"body":{"index.html":{}}}],["aggiungere",{"_index":363,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["aggiunte",{"_index":754,"title":{},"body":{"index.html":{}}}],["aggiunti",{"_index":773,"title":{},"body":{"index.html":{}}}],["aggiuntive",{"_index":730,"title":{},"body":{"index.html":{}}}],["aggiuntivo",{"_index":421,"title":{},"body":{"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{}}}],["aggiunto",{"_index":746,"title":{},"body":{"index.html":{}}}],["ai",{"_index":521,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["ajax",{"_index":301,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["al",{"_index":45,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["alcune",{"_index":1091,"title":{},"body":{"index.html":{}}}],["alcuni",{"_index":1240,"title":{},"body":{"index.html":{}}}],["alert",{"_index":16,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"index.html":{}}}],["alert'},{'name",{"_index":68,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["alert(caller.uuid",{"_index":1217,"title":{},"body":{"index.html":{}}}],["alert(title,message",{"_index":1124,"title":{},"body":{"index.html":{}}}],["alert.component.css",{"_index":18,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.component.html",{"_index":20,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertcomponent",{"_index":1,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["alertservice",{"_index":76,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["all'immagine",{"_index":1112,"title":{},"body":{"index.html":{}}}],["all'interno",{"_index":687,"title":{},"body":{"index.html":{}}}],["all'observer",{"_index":1168,"title":{},"body":{"index.html":{}}}],["alla",{"_index":163,"title":{},"body":{"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["alle",{"_index":795,"title":{},"body":{"index.html":{}}}],["allo",{"_index":669,"title":{},"body":{"index.html":{}}}],["altre",{"_index":498,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["altri",{"_index":1079,"title":{},"body":{"index.html":{}}}],["altrimenti",{"_index":1205,"title":{},"body":{"index.html":{}}}],["altro",{"_index":365,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["ambient",{"_index":185,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{},"miscellaneous/variables.html":{}}}],["ambientmodeproviderfactory",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ambientmodeproviderfactory(ambientmodeservice",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ambientmodeservice",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ambientservice",{"_index":490,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["anche",{"_index":502,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["ancora",{"_index":1030,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["annotation",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["annotazione",{"_index":867,"title":{},"body":{"index.html":{}}}],["anteposto",{"_index":895,"title":{},"body":{"index.html":{}}}],["apertura",{"_index":716,"title":{},"body":{"index.html":{}}}],["api",{"_index":807,"title":{},"body":{"index.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["appcomponent",{"_index":948,"title":{},"body":{"index.html":{}}}],["appesantimenti",{"_index":859,"title":{},"body":{"index.html":{}}}],["appese",{"_index":699,"title":{},"body":{"index.html":{}}}],["applicare",{"_index":1227,"title":{},"body":{"index.html":{}}}],["applicationref",{"_index":83,"title":{},"body":{"injectables/AlertService.html":{}}}],["applicationtype",{"_index":472,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["applicative",{"_index":753,"title":{},"body":{"index.html":{}}}],["applicativo",{"_index":701,"title":{},"body":{"index.html":{}}}],["applicato",{"_index":1173,"title":{},"body":{"index.html":{}}}],["applicazioni",{"_index":667,"title":{},"body":{"index.html":{}}}],["apppage",{"_index":101,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{}}}],["appref",{"_index":82,"title":{},"body":{"injectables/AlertService.html":{}}}],["array",{"_index":491,"title":{},"body":{"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["arraybuffer",{"_index":471,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["arrivati",{"_index":1152,"title":{},"body":{"index.html":{}}}],["arrow",{"_index":147,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["assegnando",{"_index":1235,"title":{},"body":{"index.html":{}}}],["assegnare",{"_index":149,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["assets",{"_index":1054,"title":{},"body":{"index.html":{}}}],["assets/public/mock",{"_index":1057,"title":{},"body":{"index.html":{}}}],["assets/public/mock/example/no/cache/api/122",{"_index":1044,"title":{},"body":{"index.html":{}}}],["attenzione",{"_index":1204,"title":{},"body":{"index.html":{}}}],["attessa",{"_index":510,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["attivato",{"_index":964,"title":{},"body":{"index.html":{}}}],["attivi",{"_index":719,"title":{},"body":{"index.html":{}}}],["attivo",{"_index":1185,"title":{},"body":{"index.html":{}}}],["atto",{"_index":713,"title":{},"body":{"index.html":{}}}],["autenticazione",{"_index":726,"title":{},"body":{"index.html":{}}}],["author",{"_index":869,"title":{},"body":{"index.html":{}}}],["automatica",{"_index":928,"title":{},"body":{"index.html":{}}}],["automaticamente",{"_index":744,"title":{},"body":{"index.html":{}}}],["automatici",{"_index":956,"title":{},"body":{"index.html":{}}}],["automatico",{"_index":951,"title":{},"body":{"index.html":{}}}],["automatido",{"_index":763,"title":{},"body":{"index.html":{}}}],["autonomamente",{"_index":1064,"title":{},"body":{"index.html":{}}}],["autonomia",{"_index":703,"title":{},"body":{"index.html":{}}}],["autonomina",{"_index":779,"title":{},"body":{"index.html":{}}}],["avanzamenti",{"_index":712,"title":{},"body":{"index.html":{}}}],["avere",{"_index":878,"title":{},"body":{"index.html":{}}}],["avr",{"_index":1221,"title":{},"body":{"index.html":{}}}],["avvalersi",{"_index":1092,"title":{},"body":{"index.html":{}}}],["avver",{"_index":851,"title":{},"body":{"index.html":{}}}],["avverte",{"_index":842,"title":{},"body":{"index.html":{}}}],["avviato",{"_index":830,"title":{},"body":{"index.html":{}}}],["avviene",{"_index":884,"title":{},"body":{"index.html":{}}}],["avvio",{"_index":908,"title":{},"body":{"index.html":{}}}],["background",{"_index":717,"title":{},"body":{"index.html":{}}}],["bar",{"_index":1257,"title":{},"body":{"index.html":{}}}],["base",{"_index":192,"title":{},"body":{"components/PlBaseComponent.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["basecomponent",{"_index":784,"title":{},"body":{"index.html":{}}}],["bg",{"_index":1210,"title":{},"body":{"index.html":{}}}],["binaria",{"_index":772,"title":{},"body":{"index.html":{}}}],["binaryfind",{"_index":532,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["blob",{"_index":337,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["bloburl",{"_index":483,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["blocca",{"_index":1191,"title":{},"body":{"index.html":{}}}],["blocco",{"_index":741,"title":{},"body":{"index.html":{}}}],["body",{"_index":405,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["boolean",{"_index":88,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"index.html":{}}}],["booleano",{"_index":169,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["bootstrap",{"_index":257,"title":{},"body":{"modules/PlCoreModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["broadcast",{"_index":297,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["browse",{"_index":1269,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":189,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser.all",{"_index":1244,"title":{},"body":{"index.html":{}}}],["browser_valid",{"_index":1243,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["browseridentify",{"_index":187,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{}}}],["buffer",{"_index":492,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["cacable",{"_index":874,"title":{},"body":{"index.html":{}}}],["cacable@/example/:api/:files",{"_index":836,"title":{},"body":{"index.html":{}}}],["cacable@/example/cacable/api?param1={0}&param2={1",{"_index":888,"title":{},"body":{"index.html":{}}}],["cacable@/example/cache/api?param1={0}&param2={1",{"_index":889,"title":{},"body":{"index.html":{}}}],["cachable",{"_index":915,"title":{},"body":{"index.html":{}}}],["cache",{"_index":110,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PlCacheMapService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cache_tag",{"_index":914,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cacheentry",{"_index":107,"title":{"interfaces/CacheEntry.html":{}},"body":{"interfaces/CacheEntry.html":{}}}],["call",{"_index":345,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["callback",{"_index":311,"title":{},"body":{"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["caller",{"_index":1211,"title":{},"body":{"index.html":{}}}],["callmock(p1",{"_index":803,"title":{},"body":{"index.html":{}}}],["cambiare",{"_index":1085,"title":{},"body":{"index.html":{}}}],["cambio",{"_index":700,"title":{},"body":{"index.html":{}}}],["campo",{"_index":929,"title":{},"body":{"index.html":{}}}],["campodata",{"_index":939,"title":{},"body":{"index.html":{}}}],["cancellazione",{"_index":306,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["canvas",{"_index":327,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["canvastoimg",{"_index":314,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["canvastoimg(canvas",{"_index":321,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["cartelle",{"_index":1049,"title":{},"body":{"index.html":{}}}],["caso",{"_index":164,"title":{},"body":{"injectables/PLWorkerService.html":{},"modules/PlCoreModule.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["cattuare",{"_index":343,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["changes",{"_index":233,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["changevalues",{"_index":1015,"title":{},"body":{"index.html":{}}}],["changevaluesbykey",{"_index":1018,"title":{},"body":{"index.html":{}}}],["chart.js",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["chartjs",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["che",{"_index":170,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["chiamata",{"_index":509,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["chiamate",{"_index":428,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["chiamte",{"_index":693,"title":{},"body":{"index.html":{}}}],["chiavi",{"_index":843,"title":{},"body":{"index.html":{}}}],["chiusura",{"_index":34,"title":{},"body":{"components/AlertComponent.html":{}}}],["cicli",{"_index":651,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["ciclo",{"_index":1164,"title":{},"body":{"index.html":{}}}],["cio",{"_index":1225,"title":{},"body":{"index.html":{}}}],["citata",{"_index":1084,"title":{},"body":{"index.html":{}}}],["class",{"_index":100,"title":{"classes/AppPage.html":{},"classes/PlCoreUtils.html":{},"classes/PlHttpRequest.html":{}},"body":{"index.html":{}}}],["classdecorator",{"_index":648,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classe",{"_index":287,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["classes",{"_index":102,"title":{},"body":{"classes/AppPage.html":{},"classes/PlCoreUtils.html":{},"classes/PlHttpRequest.html":{},"overview.html":{}}}],["classi",{"_index":943,"title":{},"body":{"index.html":{}}}],["client",{"_index":903,"title":{},"body":{"index.html":{}}}],["closedialog",{"_index":28,"title":{},"body":{"components/AlertComponent.html":{}}}],["cluster_plcoremodule",{"_index":260,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["cluster_plcoremodule_declarations",{"_index":261,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["cluster_plcoremodule_exports",{"_index":262,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["cluster_plcoremodule_providers",{"_index":263,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["coda",{"_index":54,"title":{},"body":{"components/AlertComponent.html":{}}}],["codice",{"_index":989,"title":{},"body":{"index.html":{}}}],["codificate",{"_index":1140,"title":{},"body":{"index.html":{}}}],["cognome",{"_index":993,"title":{},"body":{"index.html":{}}}],["collaudati",{"_index":673,"title":{},"body":{"index.html":{}}}],["combinazione",{"_index":500,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["come",{"_index":424,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["compat",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["compatibili",{"_index":743,"title":{},"body":{"index.html":{}}}],["complessi",{"_index":1138,"title":{},"body":{"index.html":{}}}],["complessivo",{"_index":1199,"title":{},"body":{"index.html":{}}}],["complesso",{"_index":748,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"index.html":{}}}],["component.component.ts",{"_index":193,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["component/pl",{"_index":191,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["component_template",{"_index":62,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["componente",{"_index":91,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["componente,in",{"_index":953,"title":{},"body":{"index.html":{}}}],["componentfactoryresolver",{"_index":81,"title":{},"body":{"injectables/AlertService.html":{}}}],["componenti",{"_index":966,"title":{},"body":{"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"overview.html":{}}}],["comportamento",{"_index":739,"title":{},"body":{"index.html":{}}}],["comprese",{"_index":357,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["comunque",{"_index":1082,"title":{},"body":{"index.html":{}}}],["con",{"_index":446,"title":{},"body":{"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["condizione",{"_index":1178,"title":{},"body":{"index.html":{}}}],["condizioni",{"_index":1166,"title":{},"body":{"index.html":{}}}],["configurabile",{"_index":963,"title":{},"body":{"index.html":{}}}],["configurabili",{"_index":1237,"title":{},"body":{"index.html":{}}}],["configurando",{"_index":905,"title":{},"body":{"index.html":{}}}],["configurare",{"_index":916,"title":{},"body":{"index.html":{}}}],["configurate",{"_index":705,"title":{},"body":{"index.html":{}}}],["configurazione",{"_index":864,"title":{},"body":{"index.html":{}}}],["configurazioni",{"_index":796,"title":{},"body":{"index.html":{}}}],["consegna",{"_index":1113,"title":{},"body":{"index.html":{}}}],["conseguente",{"_index":852,"title":{},"body":{"index.html":{}}}],["considerazione",{"_index":351,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["consiglia",{"_index":1038,"title":{},"body":{"index.html":{}}}],["console.error(error",{"_index":1216,"title":{},"body":{"index.html":{}}}],["console.log(caller.uuid)opzioni",{"_index":1236,"title":{},"body":{"index.html":{}}}],["console.log(this.data",{"_index":1155,"title":{},"body":{"index.html":{}}}],["console.log(this.params",{"_index":1156,"title":{},"body":{"index.html":{}}}],["console.log(this.queryparams",{"_index":1154,"title":{},"body":{"index.html":{}}}],["console.log(user",{"_index":996,"title":{},"body":{"index.html":{}}}],["console.log(val",{"_index":1215,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/PlBaseComponent.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{}}}],["constructor(componentfactoryresolver",{"_index":80,"title":{},"body":{"injectables/AlertService.html":{}}}],["constructor(http",{"_index":468,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["constructor(injector",{"_index":222,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["constructor(objectservice",{"_index":410,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["constructor(pathmock",{"_index":393,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["constructor(plhttpservice",{"_index":320,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["constructor(private",{"_index":1133,"title":{},"body":{"index.html":{}}}],["contenente",{"_index":160,"title":{},"body":{"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["contenenti",{"_index":834,"title":{},"body":{"index.html":{}}}],["contenere",{"_index":329,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["contenete",{"_index":440,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["contenitore",{"_index":55,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PlGraphicService.html":{},"index.html":{}}}],["content_type",{"_index":473,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["content_type.pdf",{"_index":475,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["content_type|string|null",{"_index":517,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["contenttype",{"_index":480,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["contentuto",{"_index":515,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["contenuta",{"_index":496,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["contenuto",{"_index":493,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["context",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contiene",{"_index":976,"title":{},"body":{"index.html":{}}}],["continuo",{"_index":1165,"title":{},"body":{"index.html":{}}}],["controllo",{"_index":678,"title":{},"body":{"index.html":{}}}],["conversione",{"_index":776,"title":{},"body":{"index.html":{}}}],["convertire",{"_index":1097,"title":{},"body":{"index.html":{}}}],["core",{"_index":8,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["corredato",{"_index":990,"title":{},"body":{"index.html":{}}}],["corrente",{"_index":51,"title":{},"body":{"components/AlertComponent.html":{}}}],["correntemente",{"_index":768,"title":{},"body":{"index.html":{}}}],["corrispondere",{"_index":1073,"title":{},"body":{"index.html":{}}}],["cosi",{"_index":1033,"title":{},"body":{"index.html":{}}}],["costrutto",{"_index":1104,"title":{},"body":{"index.html":{}}}],["creare",{"_index":174,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["creata",{"_index":520,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["createblob",{"_index":461,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["createblob(streamdata",{"_index":470,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["created",{"_index":1267,"title":{},"body":{"index.html":{}}}],["creati",{"_index":957,"title":{},"body":{"index.html":{}}}],["creato",{"_index":360,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["creazione",{"_index":346,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["currentelement",{"_index":544,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["currentindex",{"_index":543,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["custom",{"_index":1116,"title":{},"body":{"index.html":{}}}],["customevent('pl:set",{"_index":969,"title":{},"body":{"index.html":{}}}],["d",{"_index":935,"title":{},"body":{"index.html":{}}}],["da",{"_index":97,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dal",{"_index":1053,"title":{},"body":{"index.html":{}}}],["dall'header",{"_index":767,"title":{},"body":{"index.html":{}}}],["dalla",{"_index":53,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["data",{"_index":134,"title":{},"body":{"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"index.html":{}}}],["dataobs",{"_index":202,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["date",{"_index":940,"title":{},"body":{"index.html":{}}}],["dato",{"_index":1139,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":256,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["decoratore",{"_index":962,"title":{},"body":{"index.html":{}}}],["decoratori",{"_index":774,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"components/AlertComponent.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"classes/PlCoreUtils.html":{},"injectables/PlHttpService.html":{},"injectables/PlUtilsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_path_mock",{"_index":1089,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["degli",{"_index":307,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["dei",{"_index":736,"title":{},"body":{"index.html":{}}}],["del",{"_index":156,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["del'intercettore",{"_index":274,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["del'ondestroy",{"_index":952,"title":{},"body":{"index.html":{}}}],["delete",{"_index":462,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["delete(plhttprequest",{"_index":476,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["dell'applicazione",{"_index":909,"title":{},"body":{"index.html":{}}}],["dell'elemento",{"_index":1105,"title":{},"body":{"index.html":{}}}],["dell'oggetto",{"_index":844,"title":{},"body":{"index.html":{}}}],["della",{"_index":35,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["delle",{"_index":292,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["dello",{"_index":487,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["dependencies",{"_index":255,"title":{"dependencies.html":{}},"body":{"modules/PlCoreModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":137,"title":{},"body":{"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{}}}],["destinazione",{"_index":228,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["destroyblob",{"_index":463,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["destroyblob(bloburl",{"_index":482,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["detail",{"_index":971,"title":{},"body":{"index.html":{}}}],["detect",{"_index":188,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{}}}],["determinati",{"_index":802,"title":{},"body":{"index.html":{}}}],["detto",{"_index":856,"title":{},"body":{"index.html":{}}}],["deve",{"_index":328,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["devono",{"_index":1072,"title":{},"body":{"index.html":{}}}],["di",{"_index":56,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dialog",{"_index":23,"title":{},"body":{"components/AlertComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dialogo",{"_index":1121,"title":{},"body":{"index.html":{}}}],["dichiarare",{"_index":833,"title":{},"body":{"index.html":{}}}],["dichiarati",{"_index":742,"title":{},"body":{"index.html":{}}}],["dichiarativo",{"_index":1041,"title":{},"body":{"index.html":{}}}],["dichiarato",{"_index":1034,"title":{},"body":{"index.html":{}}}],["differences",{"_index":1010,"title":{},"body":{"index.html":{}}}],["dimensione",{"_index":758,"title":{},"body":{"index.html":{}}}],["dimensioni",{"_index":761,"title":{},"body":{"index.html":{}}}],["directive",{"_index":60,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["directives",{"_index":70,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["direttire",{"_index":229,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["disabilitandola",{"_index":1132,"title":{},"body":{"index.html":{}}}],["disabilitare",{"_index":89,"title":{},"body":{"injectables/AlertService.html":{}}}],["disable_log",{"_index":1245,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dismessi",{"_index":697,"title":{},"body":{"index.html":{}}}],["disponibili",{"_index":787,"title":{},"body":{"index.html":{}}}],["disposizione",{"_index":96,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{}}}],["diversamente",{"_index":831,"title":{},"body":{"index.html":{}}}],["diversi",{"_index":671,"title":{},"body":{"index.html":{}}}],["diverso",{"_index":740,"title":{},"body":{"index.html":{}}}],["docheck",{"_index":195,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["document.dispatchevent(new",{"_index":968,"title":{},"body":{"index.html":{}}}],["documentazione",{"_index":689,"title":{},"body":{"index.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{},"index.html":{}}}],["dom2jpeg",{"_index":315,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["dom2jpeg(elementsvg",{"_index":339,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["domtocanvas",{"_index":316,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["domtocanvas(elementodom",{"_index":344,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["dopo",{"_index":822,"title":{},"body":{"index.html":{}}}],["dove",{"_index":373,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["dovr",{"_index":898,"title":{},"body":{"index.html":{}}}],["down",{"_index":302,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["download",{"_index":370,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["download(streamdata",{"_index":484,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["download_temp",{"_index":506,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["downloadurl",{"_index":464,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["downloadurl(url",{"_index":494,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["due",{"_index":1194,"title":{},"body":{"index.html":{}}}],["durata",{"_index":1241,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":92,"title":{},"body":{"injectables/AlertService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"index.html":{}}}],["e.s",{"_index":882,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":103,"title":{},"body":{"classes/AppPage.html":{}}}],["ed",{"_index":863,"title":{},"body":{"index.html":{}}}],["eeee",{"_index":933,"title":{},"body":{"index.html":{}}}],["effettivamente",{"_index":1077,"title":{},"body":{"index.html":{}}}],["effetto",{"_index":1222,"title":{},"body":{"index.html":{}}}],["effettuare",{"_index":495,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["effettuate",{"_index":1251,"title":{},"body":{"index.html":{}}}],["elaborare",{"_index":1106,"title":{},"body":{"index.html":{}}}],["element",{"_index":59,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{},"index.html":{}}}],["elemento",{"_index":341,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["elementodom",{"_index":371,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["elementref",{"_index":41,"title":{},"body":{"components/AlertComponent.html":{}}}],["elementsvg",{"_index":340,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["elencare",{"_index":959,"title":{},"body":{"index.html":{}}}],["eliinatzione",{"_index":949,"title":{},"body":{"index.html":{}}}],["eliminata",{"_index":921,"title":{},"body":{"index.html":{}}}],["eliminazione",{"_index":1256,"title":{},"body":{"index.html":{}}}],["elininato",{"_index":975,"title":{},"body":{"index.html":{}}}],["enable",{"_index":99,"title":{},"body":{"injectables/AlertService.html":{}}}],["enablealertmessage",{"_index":79,"title":{},"body":{"injectables/AlertService.html":{}}}],["enablealertmessage(enable",{"_index":87,"title":{},"body":{"injectables/AlertService.html":{}}}],["enabled",{"_index":647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entrycomponents",{"_index":270,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["entrytime",{"_index":112,"title":{},"body":{"interfaces/CacheEntry.html":{}}}],["environment.exampleapi.format(\"p1\",\"p2",{"_index":883,"title":{},"body":{"index.html":{}}}],["environment.http.api.mock",{"_index":806,"title":{},"body":{"index.html":{}}}],["equipagiato",{"_index":797,"title":{},"body":{"index.html":{}}}],["error",{"_index":819,"title":{},"body":{"index.html":{}}}],["es",{"_index":644,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["escludendo",{"_index":1056,"title":{},"body":{"index.html":{}}}],["esecuzione",{"_index":182,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["eseguire",{"_index":778,"title":{},"body":{"index.html":{}}}],["esempi",{"_index":927,"title":{},"body":{"index.html":{}}}],["esempio",{"_index":431,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["esporre",{"_index":668,"title":{},"body":{"index.html":{}}}],["esporta",{"_index":1099,"title":{},"body":{"index.html":{}}}],["esposta",{"_index":1035,"title":{},"body":{"index.html":{}}}],["esposti",{"_index":695,"title":{},"body":{"index.html":{}}}],["essa",{"_index":1234,"title":{},"body":{"index.html":{}}}],["essere",{"_index":333,"title":{},"body":{"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["esteso",{"_index":1136,"title":{},"body":{"index.html":{}}}],["eventi",{"_index":295,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["evento",{"_index":1189,"title":{},"body":{"index.html":{}}}],["eventualmente",{"_index":382,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["everytime",{"_index":659,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["evitando",{"_index":708,"title":{},"body":{"index.html":{}}}],["evitare",{"_index":858,"title":{},"body":{"index.html":{}}}],["example",{"_index":126,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{}}}],["example/:api/:file/**post.json",{"_index":1059,"title":{},"body":{"index.html":{}}}],["example/:api/:file/get.json",{"_index":1058,"title":{},"body":{"index.html":{}}}],["example/:id",{"_index":1081,"title":{},"body":{"index.html":{}}}],["example/no/cache/api?param1={0}&param2={1",{"_index":891,"title":{},"body":{"index.html":{}}}],["exampleapenocache",{"_index":890,"title":{},"body":{"index.html":{}}}],["exampleapi",{"_index":887,"title":{},"body":{"index.html":{}}}],["execevent(event",{"_index":309,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["export",{"_index":947,"title":{},"body":{"index.html":{}}}],["exports",{"_index":259,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["extends",{"_index":1144,"title":{},"body":{"index.html":{}}}],["extension",{"_index":120,"title":{},"body":{"interfaces/Observable.html":{},"interfaces/Subscriber.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["extras",{"_index":224,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["false",{"_index":167,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["fare",{"_index":1265,"title":{},"body":{"index.html":{}}}],["fase",{"_index":1031,"title":{},"body":{"index.html":{}}}],["feature",{"_index":692,"title":{},"body":{"index.html":{}}}],["fedelmente",{"_index":1103,"title":{},"body":{"index.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"index.html":{},"interfaces/progressBarsInterface.html":{}}}],["file,in",{"_index":737,"title":{},"body":{"index.html":{}}}],["file:projects/pl",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["filename",{"_index":485,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["files",{"_index":808,"title":{},"body":{"index.html":{}}}],["findbyvalue",{"_index":1020,"title":{},"body":{"index.html":{}}}],["findkey",{"_index":1024,"title":{},"body":{"index.html":{}}}],["fine",{"_index":1187,"title":{},"body":{"index.html":{}}}],["finestra",{"_index":1120,"title":{},"body":{"index.html":{}}}],["fino",{"_index":1176,"title":{},"body":{"index.html":{}}}],["fix",{"_index":1250,"title":{},"body":{"index.html":{}}}],["flusso",{"_index":677,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1043,"title":{},"body":{"index.html":{}}}],["forkjoin",{"_index":465,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["forkjoin(plhttprequest",{"_index":507,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["format",{"_index":637,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["format_number|dstring",{"_index":640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formato",{"_index":385,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["formattare",{"_index":880,"title":{},"body":{"index.html":{}}}],["formattazione",{"_index":854,"title":{},"body":{"index.html":{}}}],["formdata",{"_index":412,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["fortawesome/fontawesome",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["fortime",{"_index":658,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["fosse",{"_index":181,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["free",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["fulldate",{"_index":932,"title":{},"body":{"index.html":{}}}],["funaione",{"_index":369,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["function",{"_index":139,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["functions",{"_index":616,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funzine",{"_index":1108,"title":{},"body":{"index.html":{}}}],["funzioa",{"_index":987,"title":{},"body":{"index.html":{}}}],["funzionalit",{"_index":31,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/PlCoreModule.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["funzionalita",{"_index":380,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["funzionamento",{"_index":1172,"title":{},"body":{"index.html":{}}}],["funzione",{"_index":152,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["gestione",{"_index":1093,"title":{},"body":{"index.html":{}}}],["gestire",{"_index":675,"title":{},"body":{"index.html":{}}}],["gestita",{"_index":702,"title":{},"body":{"index.html":{}}}],["get(plhttprequest",{"_index":508,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["get(req",{"_index":247,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["getbg",{"_index":1208,"title":{},"body":{"index.html":{}}}],["getbody",{"_index":422,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["gethttpheaders",{"_index":414,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["getiinterrupt",{"_index":284,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["getlocalhttpheaders",{"_index":530,"title":{},"body":{"injectables/PlNetworkService.html":{}}}],["getmethod",{"_index":455,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["getmocked",{"_index":458,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["getqueryparams",{"_index":436,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["getting",{"_index":660,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":104,"title":{},"body":{"classes/AppPage.html":{}}}],["geturl",{"_index":444,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["gia",{"_index":179,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["gli",{"_index":954,"title":{},"body":{"index.html":{}}}],["go",{"_index":1145,"title":{},"body":{"index.html":{}}}],["godono",{"_index":1160,"title":{},"body":{"index.html":{}}}],["gotopage",{"_index":214,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["gotopage(pageurl",{"_index":223,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["grado",{"_index":724,"title":{},"body":{"index.html":{}}}],["grafica",{"_index":1096,"title":{},"body":{"index.html":{}}}],["grafiche",{"_index":755,"title":{},"body":{"index.html":{}}}],["grafici",{"_index":353,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["graphic.service.ts",{"_index":313,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["graphicservice",{"_index":203,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["grazie",{"_index":873,"title":{},"body":{"index.html":{}}}],["gulp",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["ha",{"_index":1232,"title":{},"body":{"index.html":{}}}],["hanno",{"_index":800,"title":{},"body":{"index.html":{}}}],["header",{"_index":420,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["homecomponent",{"_index":1143,"title":{},"body":{"index.html":{}}}],["hook",{"_index":942,"title":{},"body":{"index.html":{}}}],["html",{"_index":46,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{},"index.html":{}}}],["html2canvas",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["htmlelement",{"_index":322,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["http",{"_index":283,"title":{},"body":{"modules/PlCoreModule.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["http.service.ts",{"_index":460,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["http://localhost:4200/#/home?obj=eyjob21lmsi6imnpyw8ilcjob21lmii6imnpyw8ifq%3d%3d",{"_index":1157,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":469,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["httphandler",{"_index":398,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["httpheaders",{"_index":404,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["httprequest",{"_index":248,"title":{},"body":{"injectables/PlCacheMapService.html":{},"interceptors/PlHttpInterceptorMockService.html":{}}}],["httpresponse",{"_index":116,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PlCacheMapService.html":{}}}],["httpservice",{"_index":204,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["id",{"_index":481,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["idajax",{"_index":812,"title":{},"body":{"index.html":{}}}],["identificare",{"_index":759,"title":{},"body":{"index.html":{}}}],["identificativo",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ie",{"_index":733,"title":{},"body":{"index.html":{}}}],["ignore",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["il",{"_index":90,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["illustra",{"_index":690,"title":{},"body":{"index.html":{}}}],["illustrativo",{"_index":1037,"title":{},"body":{"index.html":{}}}],["image",{"_index":501,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["image2base64",{"_index":317,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["image2base64(imageurl",{"_index":375,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["imageurl",{"_index":376,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["immagine",{"_index":330,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["immagini",{"_index":358,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["immediata",{"_index":1128,"title":{},"body":{"index.html":{}}}],["impattano",{"_index":751,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["impone",{"_index":1042,"title":{},"body":{"index.html":{}}}],["impostare",{"_index":845,"title":{},"body":{"index.html":{}}}],["inarray",{"_index":1012,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1274,"title":{},"body":{"interfaces/progressBarsInterface.html":{}}}],["indica",{"_index":171,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlHttpRequest.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["indicare",{"_index":897,"title":{},"body":{"index.html":{}}}],["indicate",{"_index":1061,"title":{},"body":{"index.html":{}}}],["infinito",{"_index":1186,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"interfaces/progressBarsInterface.html":{}}}],["informazioni",{"_index":766,"title":{},"body":{"index.html":{}}}],["inglobbare",{"_index":786,"title":{},"body":{"index.html":{}}}],["ingresso",{"_index":1068,"title":{},"body":{"index.html":{}}}],["inibisce",{"_index":965,"title":{},"body":{"index.html":{}}}],["inibizione",{"_index":777,"title":{},"body":{"index.html":{}}}],["iniettare",{"_index":374,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["initprocess",{"_index":132,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["inizializzazione",{"_index":1088,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":75,"title":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{}},"body":{}}],["injectables",{"_index":77,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"overview.html":{}}}],["injectiontoken('defaul",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('defaultimeout",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('tag",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('browser",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('disabilita",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":84,"title":{},"body":{"injectables/AlertService.html":{},"components/PlBaseComponent.html":{}}}],["innescare",{"_index":725,"title":{},"body":{"index.html":{}}}],["inoltre",{"_index":788,"title":{},"body":{"index.html":{}}}],["inplcoreutilslibraryservice.progressbars",{"_index":523,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["input",{"_index":130,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlUtilsService.html":{}}}],["input.arr.length",{"_index":541,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["input.searchelement",{"_index":545,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["inserimento",{"_index":762,"title":{},"body":{"index.html":{}}}],["inserire",{"_index":866,"title":{},"body":{"index.html":{}}}],["insert",{"_index":1014,"title":{},"body":{"index.html":{}}}],["installare",{"_index":729,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":392,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["intercept(request",{"_index":396,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["interceptor",{"_index":388,"title":{"interceptors/PlHttpInterceptorMockService.html":{}},"body":{"interceptors/PlHttpInterceptorMockService.html":{},"miscellaneous/variables.html":{}}}],["interceptors",{"_index":389,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["intercettare",{"_index":683,"title":{},"body":{"index.html":{}}}],["intercettazione",{"_index":723,"title":{},"body":{"index.html":{}}}],["intercetter",{"_index":1062,"title":{},"body":{"index.html":{}}}],["interfaccia",{"_index":791,"title":{},"body":{"index.html":{}}}],["interface",{"_index":106,"title":{"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"interfaces/Subscriber.html":{},"interfaces/progressBarsInterface.html":{}},"body":{}}],["interfaces",{"_index":108,"title":{},"body":{"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"interfaces/Subscriber.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{}}}],["interrompe",{"_index":1201,"title":{},"body":{"index.html":{}}}],["interrotta",{"_index":1206,"title":{},"body":{"index.html":{}}}],["interrupt",{"_index":479,"title":{},"body":{"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["interval",{"_index":1229,"title":{},"body":{"index.html":{}}}],["introdotto",{"_index":1115,"title":{},"body":{"index.html":{}}}],["introducendo",{"_index":1255,"title":{},"body":{"index.html":{}}}],["invariate",{"_index":1263,"title":{},"body":{"index.html":{}}}],["inviato",{"_index":516,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["invocato",{"_index":457,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["isnullorempty",{"_index":1002,"title":{},"body":{"index.html":{}}}],["istruzione",{"_index":1087,"title":{},"body":{"index.html":{}}}],["it_it",{"_index":645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":1013,"title":{},"body":{"index.html":{}}}],["items",{"_index":1011,"title":{},"body":{"index.html":{}}}],["iterativo",{"_index":794,"title":{},"body":{"index.html":{}}}],["jpeg",{"_index":1109,"title":{},"body":{"index.html":{}}}],["jquery",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":166,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlHttpRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["json,key",{"_index":1019,"title":{},"body":{"index.html":{}}}],["json,previousvalue",{"_index":1016,"title":{},"body":{"index.html":{}}}],["json2array",{"_index":1022,"title":{},"body":{"index.html":{}}}],["json2flat",{"_index":1021,"title":{},"body":{"index.html":{}}}],["json2flatobj",{"_index":1023,"title":{},"body":{"index.html":{}}}],["key",{"_index":1275,"title":{},"body":{"interfaces/progressBarsInterface.html":{}}}],["keyfind",{"_index":1025,"title":{},"body":{"index.html":{}}}],["killare",{"_index":512,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["ko",{"_index":537,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["kook",{"_index":652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["l'alberatura",{"_index":1083,"title":{},"body":{"index.html":{}}}],["l'altra",{"_index":1184,"title":{},"body":{"index.html":{}}}],["l'elemento",{"_index":974,"title":{},"body":{"index.html":{}}}],["l'esclusione",{"_index":847,"title":{},"body":{"index.html":{}}}],["l'evento",{"_index":828,"title":{},"body":{"index.html":{}}}],["l'header",{"_index":416,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["l'immagine",{"_index":347,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["l'inserimento",{"_index":792,"title":{},"body":{"index.html":{}}}],["l'instanza",{"_index":519,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["l'intero",{"_index":1100,"title":{},"body":{"index.html":{}}}],["l'interrupt",{"_index":1188,"title":{},"body":{"index.html":{}}}],["l'intervallo",{"_index":1181,"title":{},"body":{"index.html":{}}}],["l'oggetto",{"_index":437,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["l'osservatore",{"_index":1111,"title":{},"body":{"index.html":{}}}],["l'utilizzo",{"_index":1126,"title":{},"body":{"index.html":{}}}],["l.piciollo",{"_index":486,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["la",{"_index":33,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["lanciare",{"_index":967,"title":{},"body":{"index.html":{}}}],["lanciato",{"_index":277,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["lancio",{"_index":305,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["lasciare",{"_index":698,"title":{},"body":{"index.html":{}}}],["lato",{"_index":781,"title":{},"body":{"index.html":{}}}],["le",{"_index":281,"title":{},"body":{"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":58,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["lettura",{"_index":1151,"title":{},"body":{"index.html":{}}}],["lib",{"_index":1248,"title":{},"body":{"index.html":{}}}],["library",{"_index":597,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["library.module.ts",{"_index":269,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["library.service.ts",{"_index":286,"title":{},"body":{"classes/PlCoreUtils.html":{},"interfaces/progressBarsInterface.html":{}}}],["library/src/lib/bean/pl",{"_index":401,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["library/src/lib/component/alert/alert.component.ts",{"_index":10,"title":{},"body":{"components/AlertComponent.html":{}}}],["library/src/lib/component/alert/alert.service.ts",{"_index":78,"title":{},"body":{"injectables/AlertService.html":{}}}],["library/src/lib/component/base",{"_index":190,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["library/src/lib/decorator/decordator.ts",{"_index":631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library/src/lib/extension/custom",{"_index":119,"title":{},"body":{"interfaces/Observable.html":{},"interfaces/Subscriber.html":{},"miscellaneous/functions.html":{}}}],["library/src/lib/initializer/ambientmodeprovider.ts",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["library/src/lib/interceptor/pl",{"_index":390,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{},"miscellaneous/variables.html":{}}}],["library/src/lib/pl",{"_index":268,"title":{},"body":{"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"interfaces/progressBarsInterface.html":{}}}],["library/src/lib/service/pl",{"_index":109,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"miscellaneous/variables.html":{}}}],["library/src/test.ts",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libreria",{"_index":663,"title":{},"body":{"index.html":{}}}],["line",{"_index":1266,"title":{},"body":{"index.html":{}}}],["link",{"_index":505,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["lista",{"_index":291,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["listenevent(event",{"_index":310,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["literal",{"_index":411,"title":{},"body":{"classes/PlHttpRequest.html":{},"interfaces/progressBarsInterface.html":{}}}],["livello",{"_index":1163,"title":{},"body":{"index.html":{}}}],["lo",{"_index":826,"title":{},"body":{"index.html":{}}}],["loader",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":635,"title":{},"body":{"miscellaneous/functions.html":{}}}],["localeid",{"_index":636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["log",{"_index":151,"title":{},"body":{"injectables/PLWorkerService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["log.subscribe(response",{"_index":988,"title":{},"body":{"index.html":{}}}],["loggati",{"_index":945,"title":{},"body":{"index.html":{}}}],["loro",{"_index":720,"title":{},"body":{"index.html":{}}}],["luca",{"_index":998,"title":{},"body":{"index.html":{}}}],["ma",{"_index":354,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["mal",{"_index":853,"title":{},"body":{"index.html":{}}}],["mancanti",{"_index":686,"title":{},"body":{"index.html":{}}}],["mantenuto",{"_index":1102,"title":{},"body":{"index.html":{}}}],["map.service.ts",{"_index":111,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PlCacheMapService.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":849,"title":{},"body":{"index.html":{}}}],["matching",{"_index":73,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["max_cache_age",{"_index":911,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["maxindex",{"_index":540,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["meccanismo",{"_index":735,"title":{},"body":{"index.html":{}}}],["mentre",{"_index":366,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["menu",{"_index":1141,"title":{},"body":{"index.html":{}}}],["menucomponent",{"_index":1153,"title":{},"body":{"index.html":{}}}],["message",{"_index":64,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["messageinfo",{"_index":25,"title":{},"body":{"components/AlertComponent.html":{}}}],["messageinfo.body",{"_index":65,"title":{},"body":{"components/AlertComponent.html":{}}}],["messageinfo.title",{"_index":63,"title":{},"body":{"components/AlertComponent.html":{}}}],["messaggi",{"_index":57,"title":{},"body":{"components/AlertComponent.html":{}}}],["messaggio",{"_index":50,"title":{},"body":{"components/AlertComponent.html":{}}}],["messe",{"_index":1095,"title":{},"body":{"index.html":{}}}],["messo",{"_index":95,"title":{},"body":{"injectables/AlertService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["method",{"_index":408,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["method:\"get",{"_index":838,"title":{},"body":{"index.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/AppPage.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{}}}],["metodi",{"_index":304,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["metodo",{"_index":456,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["mette",{"_index":857,"title":{},"body":{"index.html":{}}}],["migliorata",{"_index":1254,"title":{},"body":{"index.html":{}}}],["millisecondi",{"_index":824,"title":{},"body":{"index.html":{}}}],["milliseconds",{"_index":633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minindex",{"_index":538,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["miscellaneous",{"_index":615,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":934,"title":{},"body":{"index.html":{}}}],["mmomento",{"_index":718,"title":{},"body":{"index.html":{}}}],["mock",{"_index":459,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mock.service.ts",{"_index":391,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{},"miscellaneous/variables.html":{}}}],["mockare",{"_index":1080,"title":{},"body":{"index.html":{}}}],["mocked",{"_index":409,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["modale",{"_index":36,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["modalita",{"_index":981,"title":{},"body":{"index.html":{}}}],["mode.service.ts",{"_index":186,"title":{},"body":{"injectables/PlAmbientModeLoaderService.html":{},"miscellaneous/variables.html":{}}}],["modifcata",{"_index":790,"title":{},"body":{"index.html":{}}}],["modo",{"_index":361,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["module",{"_index":252,"title":{"modules/PlCoreModule.html":{}},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["modules",{"_index":254,"title":{"modules.html":{}},"body":{"modules/PlCoreModule.html":{},"modules.html":{}}}],["modulo",{"_index":907,"title":{},"body":{"index.html":{}}}],["molto",{"_index":1127,"title":{},"body":{"index.html":{}}}],["momento",{"_index":154,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["monitoring",{"_index":1258,"title":{},"body":{"index.html":{}}}],["mostra",{"_index":710,"title":{},"body":{"index.html":{}}}],["mostrare",{"_index":383,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["mostrato",{"_index":1026,"title":{},"body":{"index.html":{}}}],["mostrer",{"_index":1119,"title":{},"body":{"index.html":{}}}],["motore",{"_index":900,"title":{},"body":{"index.html":{}}}],["movedown",{"_index":1006,"title":{},"body":{"index.html":{}}}],["moveto",{"_index":1007,"title":{},"body":{"index.html":{}}}],["moveup",{"_index":1008,"title":{},"body":{"index.html":{}}}],["name",{"_index":67,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{}}}],["namefile",{"_index":378,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["namethred",{"_index":131,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["nata",{"_index":1122,"title":{},"body":{"index.html":{}}}],["nativehttp",{"_index":466,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["nativehttp(plhttprequest",{"_index":524,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["nativo",{"_index":94,"title":{},"body":{"injectables/AlertService.html":{}}}],["nato",{"_index":1135,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":105,"title":{},"body":{"classes/AppPage.html":{}}}],["navigationstart",{"_index":275,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["navigazione",{"_index":680,"title":{},"body":{"index.html":{}}}],["necessitano",{"_index":1067,"title":{},"body":{"index.html":{}}}],["nei",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nel",{"_index":497,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["nell'esempio",{"_index":1070,"title":{},"body":{"index.html":{}}}],["nell'osservable",{"_index":386,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["nella",{"_index":868,"title":{},"body":{"index.html":{}}}],["nelle",{"_index":1252,"title":{},"body":{"index.html":{}}}],["network.service.ts",{"_index":529,"title":{},"body":{"injectables/PlNetworkService.html":{}}}],["networkservice",{"_index":205,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["new",{"_index":235,"title":{},"body":{"components/PlBaseComponent.html":{},"injectables/PlUtilsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":397,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["nextvalue",{"_index":1017,"title":{},"body":{"index.html":{}}}],["ng",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["ngaftercontentchecked",{"_index":215,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["ngaftercontentinit",{"_index":216,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["ngafterviewchecked",{"_index":217,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["ngafterviewinit",{"_index":218,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["ngdocheck",{"_index":219,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["ngonchanges",{"_index":220,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["ngonchanges(changes",{"_index":231,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["ngondestroy",{"_index":221,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"index.html":{}}}],["ngx",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["nome",{"_index":148,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["nome:\"luca",{"_index":992,"title":{},"body":{"index.html":{}}}],["non",{"_index":145,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nota",{"_index":875,"title":{},"body":{"index.html":{}}}],["notare",{"_index":893,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1261,"title":{},"body":{"index.html":{}}}],["null",{"_index":47,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"index.html":{}}}],["null).subscribe(sb",{"_index":816,"title":{},"body":{"index.html":{}}}],["null);le",{"_index":1066,"title":{},"body":{"index.html":{}}}],["number",{"_index":115,"title":{},"body":{"interfaces/CacheEntry.html":{},"index.html":{}}}],["numero",{"_index":641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nuova",{"_index":1161,"title":{},"body":{"index.html":{}}}],["nuovamente",{"_index":1170,"title":{},"body":{"index.html":{}}}],["nuove",{"_index":665,"title":{},"body":{"index.html":{}}}],["nuovi",{"_index":925,"title":{},"body":{"index.html":{}}}],["nuovo",{"_index":175,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["nuovo/path",{"_index":1090,"title":{},"body":{"index.html":{}}}],["o",{"_index":364,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["obbligatorio",{"_index":1192,"title":{},"body":{"index.html":{}}}],["object",{"_index":225,"title":{},"body":{"components/PlBaseComponent.html":{},"classes/PlCoreUtils.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["objectservice",{"_index":413,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["obs.complete",{"_index":818,"title":{},"body":{"index.html":{}}}],["obs.error(error",{"_index":820,"title":{},"body":{"index.html":{}}}],["obs.next(sb",{"_index":817,"title":{},"body":{"index.html":{}}}],["observable",{"_index":118,"title":{"interfaces/Observable.html":{}},"body":{"interfaces/Observable.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"injectables/PlHttpService.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["observable(obs",{"_index":805,"title":{},"body":{"index.html":{}}}],["observableesempio",{"_index":1114,"title":{},"body":{"index.html":{}}}],["observer",{"_index":367,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["occorre",{"_index":173,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["occupa",{"_index":324,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["occupano",{"_index":674,"title":{},"body":{"index.html":{}}}],["of(1,2,3",{"_index":1220,"title":{},"body":{"index.html":{}}}],["ogetto",{"_index":433,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["oggetto",{"_index":159,"title":{},"body":{"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["ogni",{"_index":1197,"title":{},"body":{"index.html":{}}}],["ok",{"_index":66,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PlUtilsService.html":{}}}],["ok(currentindex",{"_index":546,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["oltre",{"_index":1193,"title":{},"body":{"index.html":{}}}],["onchanges",{"_index":194,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["ondestroy",{"_index":200,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["online",{"_index":1264,"title":{},"body":{"index.html":{}}}],["operatori",{"_index":1230,"title":{},"body":{"index.html":{}}}],["operators",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["opportunamente",{"_index":906,"title":{},"body":{"index.html":{}}}],["opportuno",{"_index":865,"title":{},"body":{"index.html":{}}}],["oppure",{"_index":177,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlHttpRequest.html":{}}}],["optional",{"_index":86,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{}}}],["ora",{"_index":1159,"title":{},"body":{"index.html":{}}}],["oservatori",{"_index":1158,"title":{},"body":{"index.html":{}}}],["ospitante",{"_index":728,"title":{},"body":{"index.html":{}}}],["ospitare",{"_index":1050,"title":{},"body":{"index.html":{}}}],["osservatore",{"_index":1219,"title":{},"body":{"index.html":{}}}],["osservatori",{"_index":960,"title":{},"body":{"index.html":{}}}],["out",{"_index":267,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["overview",{"_index":1270,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ovviamente",{"_index":825,"title":{},"body":{"index.html":{}}}],["p1",{"_index":809,"title":{},"body":{"index.html":{}}}],["p2",{"_index":804,"title":{},"body":{"index.html":{}}}],["p3",{"_index":1149,"title":{},"body":{"index.html":{}}}],["pacchetto",{"_index":688,"title":{},"body":{"index.html":{}}}],["package",{"_index":548,"title":{"dependencies.html":{}},"body":{}}],["pageurl",{"_index":226,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["pagina",{"_index":227,"title":{},"body":{"components/PlBaseComponent.html":{},"index.html":{}}}],["pagine",{"_index":681,"title":{},"body":{"index.html":{}}}],["paraetri",{"_index":886,"title":{},"body":{"index.html":{}}}],["param",{"_index":1074,"title":{},"body":{"index.html":{}}}],["param1",{"_index":1147,"title":{},"body":{"index.html":{}}}],["param2",{"_index":1148,"title":{},"body":{"index.html":{}}}],["param3",{"_index":1150,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{}}}],["parametri",{"_index":161,"title":{},"body":{"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["params",{"_index":206,"title":{},"body":{"components/PlBaseComponent.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["paramsobs",{"_index":207,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["partendo",{"_index":1110,"title":{},"body":{"index.html":{}}}],["partezza",{"_index":155,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["partire",{"_index":381,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["passaggio",{"_index":1142,"title":{},"body":{"index.html":{}}}],["passando",{"_index":504,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["passare",{"_index":162,"title":{},"body":{"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["passassata",{"_index":450,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["passati",{"_index":447,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["passato",{"_index":417,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["patch",{"_index":467,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["patch(plhttprequest",{"_index":526,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["path",{"_index":442,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pathmock",{"_index":395,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["pathparam",{"_index":846,"title":{},"body":{"index.html":{}}}],["pathparams",{"_index":407,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["per",{"_index":32,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":752,"title":{},"body":{"index.html":{}}}],["permesso",{"_index":977,"title":{},"body":{"index.html":{}}}],["permette",{"_index":785,"title":{},"body":{"index.html":{}}}],["permission",{"_index":970,"title":{},"body":{"index.html":{}}}],["personale",{"_index":1239,"title":{},"body":{"index.html":{}}}],["pesanti",{"_index":750,"title":{},"body":{"index.html":{}}}],["pic",{"_index":994,"title":{},"body":{"index.html":{}}}],["piciollo",{"_index":999,"title":{},"body":{"index.html":{}}}],["piu",{"_index":165,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["pl",{"_index":596,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["plambientmodeloaderservice",{"_index":184,"title":{"injectables/PlAmbientModeLoaderService.html":{}},"body":{"injectables/PlAmbientModeLoaderService.html":{},"modules/PlCoreModule.html":{},"overview.html":{}}}],["plbasecomponent",{"_index":69,"title":{"components/PlBaseComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{},"modules/PlCoreModule.html":{},"index.html":{},"overview.html":{}}}],["plcachemapservice",{"_index":243,"title":{"injectables/PlCacheMapService.html":{}},"body":{"injectables/PlCacheMapService.html":{}}}],["plcoremodule",{"_index":253,"title":{"modules/PlCoreModule.html":{}},"body":{"modules/PlCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["plcoremodule.routing().getiinterrupt",{"_index":1213,"title":{},"body":{"index.html":{}}}],["plcoreutils",{"_index":285,"title":{"classes/PlCoreUtils.html":{}},"body":{"classes/PlCoreUtils.html":{}}}],["plcoreutils.progressbars[id].interrupt.next(true",{"_index":814,"title":{},"body":{"index.html":{}}}],["pldelay",{"_index":619,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pldelay(3000",{"_index":985,"title":{},"body":{"index.html":{}}}],["pldelay(milliseconds",{"_index":632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plformatdate",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plformatdate(format",{"_index":634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plformatdate(format_date.fulldate",{"_index":937,"title":{},"body":{"index.html":{}}}],["plgraphicservice",{"_index":238,"title":{"injectables/PlGraphicService.html":{}},"body":{"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{}}}],["plhttpinterceptormockservice",{"_index":264,"title":{"interceptors/PlHttpInterceptorMockService.html":{}},"body":{"modules/PlCoreModule.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"overview.html":{}}}],["plhttprequest",{"_index":400,"title":{"classes/PlHttpRequest.html":{}},"body":{"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["plhttpservice",{"_index":239,"title":{"injectables/PlHttpService.html":{}},"body":{"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{}}}],["plnetworkservice",{"_index":240,"title":{"injectables/PlNetworkService.html":{}},"body":{"components/PlBaseComponent.html":{},"injectables/PlNetworkService.html":{}}}],["plnumberformat",{"_index":622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plnumberformat(format",{"_index":639,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plpermission",{"_index":623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plpermission(enabled",{"_index":646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plpermission(environment.production",{"_index":979,"title":{},"body":{"index.html":{}}}],["plpermission(true",{"_index":973,"title":{},"body":{"index.html":{}}}],["pltracehooks",{"_index":624,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["pltracehooks(disabled",{"_index":649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pltracemethod",{"_index":625,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plugin",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["plunsubscribe",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plunsubscribe(ignore",{"_index":655,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["plutilsservice",{"_index":242,"title":{"injectables/PlUtilsService.html":{}},"body":{"components/PlBaseComponent.html":{},"injectables/PlUtilsService.html":{}}}],["plworkerservice",{"_index":124,"title":{"injectables/PLWorkerService.html":{}},"body":{"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{}}}],["poeter",{"_index":338,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["poi",{"_index":923,"title":{},"body":{"index.html":{}}}],["polling",{"_index":122,"title":{},"body":{"interfaces/Observable.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["polling(1000,6000",{"_index":1212,"title":{},"body":{"index.html":{}}}],["polling(everytime",{"_index":657,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["popper.js",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["portale",{"_index":1203,"title":{},"body":{"index.html":{}}}],["portata",{"_index":1260,"title":{},"body":{"index.html":{}}}],["position",{"_index":1009,"title":{},"body":{"index.html":{}}}],["posizione",{"_index":885,"title":{},"body":{"index.html":{}}}],["possibile",{"_index":289,"title":{},"body":{"classes/PlCoreUtils.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["possibilit",{"_index":706,"title":{},"body":{"index.html":{}}}],["possibilita",{"_index":749,"title":{},"body":{"index.html":{}}}],["possono",{"_index":696,"title":{},"body":{"index.html":{}}}],["post",{"_index":425,"title":{},"body":{"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["post(plhttprequest",{"_index":527,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["posta",{"_index":1052,"title":{},"body":{"index.html":{}}}],["post||get||put||delete||patch",{"_index":1047,"title":{},"body":{"index.html":{}}}],["poter",{"_index":922,"title":{},"body":{"index.html":{}}}],["poterlo",{"_index":362,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["precedenti",{"_index":1253,"title":{},"body":{"index.html":{}}}],["predefinita",{"_index":1130,"title":{},"body":{"index.html":{}}}],["prelevare",{"_index":1045,"title":{},"body":{"index.html":{}}}],["prendera",{"_index":930,"title":{},"body":{"index.html":{}}}],["prendere",{"_index":961,"title":{},"body":{"index.html":{}}}],["presente",{"_index":180,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["presenti",{"_index":449,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["presi",{"_index":350,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["primo",{"_index":1224,"title":{},"body":{"index.html":{}}}],["private",{"_index":938,"title":{},"body":{"index.html":{}}}],["procedere",{"_index":1238,"title":{},"body":{"index.html":{}}}],["processato",{"_index":52,"title":{},"body":{"components/AlertComponent.html":{}}}],["processi",{"_index":513,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["processo",{"_index":157,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["producono",{"_index":1226,"title":{},"body":{"index.html":{}}}],["profilo1,profilo2,profilo3",{"_index":972,"title":{},"body":{"index.html":{}}}],["progress",{"_index":300,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["progressbar",{"_index":293,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["progressbars",{"_index":296,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["progressbarsinterface",{"_index":298,"title":{"interfaces/progressBarsInterface.html":{}},"body":{"classes/PlCoreUtils.html":{},"interfaces/progressBarsInterface.html":{}}}],["progressi",{"_index":522,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["progressioni",{"_index":711,"title":{},"body":{"index.html":{}}}],["projects/.../ambientmodeprovider.ts",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../custom",{"_index":627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../decordator.ts",{"_index":620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../pl",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../test.ts",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/pl",{"_index":7,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"miscellaneous/functions.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":140,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["promise((ok",{"_index":536,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["pronti",{"_index":672,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AlertComponent.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"components/PlBaseComponent.html":{},"classes/PlCoreUtils.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"index.html":{}}}],["propertydecorator",{"_index":638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propriet",{"_index":1233,"title":{},"body":{"index.html":{}}}],["protected",{"_index":201,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["prototipato",{"_index":489,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["provide",{"_index":910,"title":{},"body":{"index.html":{}}}],["providers",{"_index":258,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["provveder",{"_index":835,"title":{},"body":{"index.html":{}}}],["pu",{"_index":892,"title":{},"body":{"index.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"injectables/PlCacheMapService.html":{},"injectables/PlGraphicService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["public/mock",{"_index":1246,"title":{},"body":{"index.html":{}}}],["pulsante",{"_index":832,"title":{},"body":{"index.html":{}}}],["puo",{"_index":332,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["purche",{"_index":1209,"title":{},"body":{"index.html":{}}}],["put",{"_index":246,"title":{},"body":{"injectables/PlCacheMapService.html":{},"injectables/PlHttpService.html":{}}}],["put(plhttprequest",{"_index":528,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["put(req",{"_index":250,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["quale",{"_index":1069,"title":{},"body":{"index.html":{}}}],["qualsiasi",{"_index":904,"title":{},"body":{"index.html":{}}}],["quanto",{"_index":738,"title":{},"body":{"index.html":{}}}],["quel",{"_index":958,"title":{},"body":{"index.html":{}}}],["quello",{"_index":1076,"title":{},"body":{"index.html":{}}}],["query",{"_index":438,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["queryparams",{"_index":208,"title":{},"body":{"components/PlBaseComponent.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["queryparamsobs",{"_index":209,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["questa",{"_index":331,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["questi",{"_index":1065,"title":{},"body":{"index.html":{}}}],["questo",{"_index":278,"title":{},"body":{"modules/PlCoreModule.html":{},"index.html":{}}}],["queuemessageinfo",{"_index":26,"title":{},"body":{"components/AlertComponent.html":{}}}],["qui",{"_index":1137,"title":{},"body":{"index.html":{}}}],["quindi",{"_index":879,"title":{},"body":{"index.html":{}}}],["raffigurante",{"_index":434,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["raggiungimento",{"_index":1177,"title":{},"body":{"index.html":{}}}],["rc.5",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":978,"title":{},"body":{"index.html":{}}}],["realtime",{"_index":757,"title":{},"body":{"index.html":{}}}],["referenziato",{"_index":348,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["registrazione",{"_index":294,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["relativo",{"_index":1046,"title":{},"body":{"index.html":{}}}],["removel",{"_index":312,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["repentine",{"_index":861,"title":{},"body":{"index.html":{}}}],["reperimento",{"_index":273,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["reperire",{"_index":765,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":234,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["replaysubject(1",{"_index":236,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["replicare",{"_index":1169,"title":{},"body":{"index.html":{}}}],["req",{"_index":249,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["request",{"_index":399,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["request.ts",{"_index":402,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["require",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":251,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["reset",{"_index":266,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}],["response",{"_index":113,"title":{},"body":{"interfaces/CacheEntry.html":{},"index.html":{}}}],["response_type",{"_index":478,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["response_type.arraybuffer",{"_index":811,"title":{},"body":{"index.html":{}}}],["response_type|string|null",{"_index":511,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["responsetype",{"_index":477,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["rest",{"_index":1174,"title":{},"body":{"index.html":{}}}],["restituisce",{"_index":359,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["result",{"_index":72,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":74,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/AppPage.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["rete",{"_index":503,"title":{},"body":{"injectables/PlHttpService.html":{},"index.html":{}}}],["retrieve",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":535,"title":{},"body":{"injectables/PlUtilsService.html":{},"index.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"classes/AppPage.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"miscellaneous/functions.html":{}}}],["riadattata",{"_index":452,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["ricavare",{"_index":518,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["ricerca",{"_index":771,"title":{},"body":{"index.html":{}}}],["riceve",{"_index":789,"title":{},"body":{"index.html":{}}}],["ricevere",{"_index":643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["richiamando",{"_index":714,"title":{},"body":{"index.html":{}}}],["richiamare",{"_index":454,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["richiamata",{"_index":153,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["richiedere",{"_index":924,"title":{},"body":{"index.html":{}}}],["richiesta",{"_index":1167,"title":{},"body":{"index.html":{}}}],["richieste",{"_index":282,"title":{},"body":{"modules/PlCoreModule.html":{},"miscellaneous/variables.html":{}}}],["richiesti",{"_index":1196,"title":{},"body":{"index.html":{}}}],["richimandola",{"_index":881,"title":{},"body":{"index.html":{}}}],["riconosciuta",{"_index":871,"title":{},"body":{"index.html":{}}}],["riferimento",{"_index":44,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["rimaste",{"_index":1262,"title":{},"body":{"index.html":{}}}],["rimozione",{"_index":782,"title":{},"body":{"index.html":{}}}],["ripetizione",{"_index":1183,"title":{},"body":{"index.html":{}}}],["ripetuta",{"_index":1175,"title":{},"body":{"index.html":{}}}],["riporta",{"_index":870,"title":{},"body":{"index.html":{}}}],["riportano",{"_index":1094,"title":{},"body":{"index.html":{}}}],["ripristinare",{"_index":93,"title":{},"body":{"injectables/AlertService.html":{}}}],["risalire",{"_index":290,"title":{},"body":{"classes/PlCoreUtils.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["riscontro",{"_index":1202,"title":{},"body":{"index.html":{}}}],["rispettare",{"_index":1039,"title":{},"body":{"index.html":{}}}],["risposta",{"_index":335,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["ritardata",{"_index":980,"title":{},"body":{"index.html":{}}}],["ritorna",{"_index":415,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["ritornare",{"_index":1129,"title":{},"body":{"index.html":{}}}],["ritornata",{"_index":336,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["ritorno",{"_index":372,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["rotta",{"_index":230,"title":{},"body":{"components/PlBaseComponent.html":{},"modules/PlCoreModule.html":{},"index.html":{}}}],["route",{"_index":210,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["router",{"_index":211,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["routine",{"_index":1118,"title":{},"body":{"index.html":{}}}],["routing",{"_index":272,"title":{},"body":{"modules/PlCoreModule.html":{},"index.html":{}}}],["run",{"_index":127,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["run(workerfunction",{"_index":129,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["runurl",{"_index":128,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["runurl(url",{"_index":183,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["rx",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["rxjs",{"_index":605,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["rxjs.ts",{"_index":121,"title":{},"body":{"interfaces/Observable.html":{},"interfaces/Subscriber.html":{},"miscellaneous/functions.html":{}}}],["salvare",{"_index":1107,"title":{},"body":{"index.html":{}}}],["sar",{"_index":1075,"title":{},"body":{"index.html":{}}}],["sass",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["scaduto",{"_index":919,"title":{},"body":{"index.html":{}}}],["scanner",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["scaricamento",{"_index":827,"title":{},"body":{"index.html":{}}}],["scaricare",{"_index":325,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["scatenata",{"_index":1117,"title":{},"body":{"index.html":{}}}],["scatenato",{"_index":1218,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["schermo",{"_index":384,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["scopo",{"_index":1036,"title":{},"body":{"index.html":{}}}],["screenshot",{"_index":756,"title":{},"body":{"index.html":{}}}],["se",{"_index":172,"title":{},"body":{"injectables/PLWorkerService.html":{},"classes/PlHttpRequest.html":{},"index.html":{}}}],["secondi",{"_index":983,"title":{},"body":{"index.html":{}}}],["secondo",{"_index":1198,"title":{},"body":{"index.html":{}}}],["seguente",{"_index":1040,"title":{},"body":{"index.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["semplice",{"_index":356,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["semplicemente",{"_index":1131,"title":{},"body":{"index.html":{}}}],["sempre",{"_index":1086,"title":{},"body":{"index.html":{}}}],["senza",{"_index":451,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["separato",{"_index":144,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["service",{"_index":406,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["servizi",{"_index":423,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["servizio",{"_index":435,"title":{},"body":{"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["setbody(object",{"_index":426,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["sethttpheaders(object",{"_index":418,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["setpathparams(object",{"_index":441,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["setqueryparams(object",{"_index":439,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["setservice(object",{"_index":432,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["settimeout((id",{"_index":813,"title":{},"body":{"index.html":{}}}],["seturl(url",{"_index":453,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["seìtesi",{"_index":308,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["showmessage",{"_index":1123,"title":{},"body":{"index.html":{}}}],["si",{"_index":323,"title":{},"body":{"injectables/PlGraphicService.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["sia",{"_index":901,"title":{},"body":{"index.html":{}}}],["siano",{"_index":448,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["simili",{"_index":1231,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":232,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["simulare",{"_index":1029,"title":{},"body":{"index.html":{}}}],["simulazioni",{"_index":780,"title":{},"body":{"index.html":{}}}],["singolinstance",{"_index":135,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["sistema",{"_index":727,"title":{},"body":{"index.html":{}}}],["solo",{"_index":355,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["sonar",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["sono",{"_index":876,"title":{},"body":{"index.html":{}}}],["sopra",{"_index":839,"title":{},"body":{"index.html":{}}}],["sostituir",{"_index":1078,"title":{},"body":{"index.html":{}}}],["sostituira",{"_index":1063,"title":{},"body":{"index.html":{}}}],["sostituire",{"_index":840,"title":{},"body":{"index.html":{}}}],["sostituzione",{"_index":850,"title":{},"body":{"index.html":{}}}],["sotto",{"_index":984,"title":{},"body":{"index.html":{}}}],["sottocartelle",{"_index":1055,"title":{},"body":{"index.html":{}}}],["sottoposta",{"_index":899,"title":{},"body":{"index.html":{}}}],["sottoscrittori",{"_index":950,"title":{},"body":{"index.html":{}}}],["sottoscriversi",{"_index":986,"title":{},"body":{"index.html":{}}}],["spec\\.ts",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specializza",{"_index":877,"title":{},"body":{"index.html":{}}}],["specializzare",{"_index":685,"title":{},"body":{"index.html":{}}}],["specialmente",{"_index":1162,"title":{},"body":{"index.html":{}}}],["sta",{"_index":896,"title":{},"body":{"index.html":{}}}],["stabilita",{"_index":1179,"title":{},"body":{"index.html":{}}}],["stampato",{"_index":997,"title":{},"body":{"index.html":{}}}],["standard",{"_index":931,"title":{},"body":{"index.html":{}}}],["stando",{"_index":731,"title":{},"body":{"index.html":{}}}],["started",{"_index":661,"title":{"index.html":{}},"body":{}}],["startup",{"_index":745,"title":{},"body":{"index.html":{}}}],["stata",{"_index":1259,"title":{},"body":{"index.html":{}}}],["static",{"_index":271,"title":{},"body":{"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{}}}],["stations/station",{"_index":244,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["stato",{"_index":894,"title":{},"body":{"index.html":{}}}],["stessa",{"_index":862,"title":{},"body":{"index.html":{}}}],["stesso",{"_index":783,"title":{},"body":{"index.html":{}}}],["stoptracesizewindow",{"_index":533,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["storable",{"_index":872,"title":{},"body":{"index.html":{}}}],["storicizzazione",{"_index":704,"title":{},"body":{"index.html":{}}}],["straming",{"_index":488,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["streamdata",{"_index":474,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["string",{"_index":117,"title":{},"body":{"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"interfaces/Subscriber.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/progressBarsInterface.html":{}}}],["stringhe",{"_index":764,"title":{},"body":{"index.html":{}}}],["struttura",{"_index":1048,"title":{},"body":{"index.html":{}}}],["stub",{"_index":1051,"title":{},"body":{"index.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AlertComponent.html":{}}}],["su",{"_index":732,"title":{},"body":{"index.html":{}}}],["sua",{"_index":715,"title":{},"body":{"index.html":{}}}],["subject",{"_index":279,"title":{},"body":{"modules/PlCoreModule.html":{},"injectables/PlHttpService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["subject|null",{"_index":514,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["subscribe",{"_index":1214,"title":{},"body":{"index.html":{}}}],["subscriber",{"_index":547,"title":{"interfaces/Subscriber.html":{}},"body":{"interfaces/Subscriber.html":{},"index.html":{}}}],["subscription",{"_index":237,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["successivamente",{"_index":1195,"title":{},"body":{"index.html":{}}}],["sue",{"_index":760,"title":{},"body":{"index.html":{}}}],["sul",{"_index":1223,"title":{},"body":{"index.html":{}}}],["sulla",{"_index":679,"title":{},"body":{"index.html":{}}}],["suo",{"_index":1171,"title":{},"body":{"index.html":{}}}],["support",{"_index":1268,"title":{},"body":{"modules.html":{}}}],["supporto",{"_index":664,"title":{},"body":{"index.html":{}}}],["svg",{"_index":342,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{},"modules.html":{}}}],["svg2file",{"_index":318,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["svg2file(elementsvg",{"_index":377,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["svgelement",{"_index":387,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["svgtoimage",{"_index":319,"title":{},"body":{"injectables/PlGraphicService.html":{}}}],["svgtoimage(svgelement",{"_index":379,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["sviluppatore",{"_index":670,"title":{},"body":{"index.html":{}}}],["sviluppo",{"_index":1032,"title":{},"body":{"index.html":{}}}],["t",{"_index":136,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["tag",{"_index":352,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["tagcache",{"_index":394,"title":{},"body":{"interceptors/PlHttpInterceptorMockService.html":{}}}],["tale",{"_index":1180,"title":{},"body":{"index.html":{}}}],["tali",{"_index":799,"title":{},"body":{"index.html":{}}}],["tanto",{"_index":682,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AlertComponent.html":{}}}],["tempo",{"_index":917,"title":{},"body":{"index.html":{}}}],["termina",{"_index":821,"title":{},"body":{"index.html":{}}}],["terminare",{"_index":280,"title":{},"body":{"modules/PlCoreModule.html":{}}}],["terminate",{"_index":801,"title":{},"body":{"index.html":{}}}],["termine",{"_index":829,"title":{},"body":{"index.html":{}}}],["this.alertservice.enablealertmessage(false",{"_index":1134,"title":{},"body":{"index.html":{}}}],["this.gotopage(\"home/menu",{"_index":1146,"title":{},"body":{"index.html":{}}}],["this.httpservice.getfile(plhttprequest",{"_index":810,"title":{},"body":{"index.html":{}}}],["thread",{"_index":143,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["timer",{"_index":1228,"title":{},"body":{"index.html":{}}}],["tipo",{"_index":429,"title":{},"body":{"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["torna",{"_index":368,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["tra",{"_index":1182,"title":{},"body":{"index.html":{}}}],["tracciare",{"_index":653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trace",{"_index":941,"title":{},"body":{"index.html":{}}}],["tracesizewindow",{"_index":534,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["tramite",{"_index":707,"title":{},"body":{"index.html":{}}}],["translate/core",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["translate/http",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["true",{"_index":837,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["truncateurlcache",{"_index":1005,"title":{},"body":{"index.html":{}}}],["truncateurlifnoparams",{"_index":1004,"title":{},"body":{"index.html":{}}}],["tutte",{"_index":1249,"title":{},"body":{"index.html":{}}}],["tutti",{"_index":694,"title":{},"body":{"index.html":{}}}],["tutto",{"_index":676,"title":{},"body":{"index.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"interfaces/Subscriber.html":{},"miscellaneous/functions.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["type?issubmenu=1",{"_index":245,"title":{},"body":{"injectables/PlCacheMapService.html":{}}}],["ui",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["ulteriori",{"_index":709,"title":{},"body":{"index.html":{}}}],["un",{"_index":142,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["un'immagine",{"_index":326,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["una",{"_index":793,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":133,"title":{},"body":{"injectables/PLWorkerService.html":{},"injectables/PlGraphicService.html":{}}}],["uno",{"_index":722,"title":{},"body":{"index.html":{}}}],["unsubscriber",{"_index":955,"title":{},"body":{"index.html":{}}}],["uono",{"_index":721,"title":{},"body":{"index.html":{}}}],["upload",{"_index":303,"title":{},"body":{"classes/PlCoreUtils.html":{}}}],["url",{"_index":114,"title":{},"body":{"interfaces/CacheEntry.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["usare",{"_index":1207,"title":{},"body":{"index.html":{}}}],["usata",{"_index":334,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["user",{"_index":991,"title":{},"body":{"index.html":{}}}],["user=json.changevaluesbykey(user,\"cognome\",\"piciollo",{"_index":995,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":912,"title":{},"body":{"index.html":{}}}],["utile",{"_index":150,"title":{},"body":{"injectables/PLWorkerService.html":{},"modules/PlCoreModule.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["utili",{"_index":798,"title":{},"body":{"index.html":{}}}],["utilit",{"_index":288,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["utilita",{"_index":770,"title":{},"body":{"index.html":{}}}],["utilizzabile",{"_index":499,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["utilizzare",{"_index":178,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["utilizzate",{"_index":1001,"title":{},"body":{"index.html":{}}}],["utilizzato",{"_index":684,"title":{},"body":{"index.html":{}}}],["utils",{"_index":9,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interfaces/CacheEntry.html":{},"interfaces/Observable.html":{},"injectables/PLWorkerService.html":{},"injectables/PlAmbientModeLoaderService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"modules/PlCoreModule.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"interceptors/PlHttpInterceptorMockService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlNetworkService.html":{},"injectables/PlUtilsService.html":{},"interfaces/Subscriber.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/progressBarsInterface.html":{},"miscellaneous/variables.html":{}}}],["utils.service.ts",{"_index":531,"title":{},"body":{"injectables/PlUtilsService.html":{}}}],["utilsservice",{"_index":212,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["uuid",{"_index":123,"title":{},"body":{"interfaces/Observable.html":{},"interfaces/Subscriber.html":{},"dependencies.html":{},"index.html":{}}}],["val",{"_index":1003,"title":{},"body":{"index.html":{}}}],["validi",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validit",{"_index":1242,"title":{},"body":{"index.html":{}}}],["valido",{"_index":918,"title":{},"body":{"index.html":{}}}],["valore",{"_index":168,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["valori",{"_index":841,"title":{},"body":{"index.html":{}}}],["valorizza",{"_index":419,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["valorizzare",{"_index":443,"title":{},"body":{"classes/PlHttpRequest.html":{}}}],["valorizzata",{"_index":445,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["valorizzazione",{"_index":427,"title":{},"body":{"classes/PlHttpRequest.html":{},"index.html":{}}}],["value",{"_index":49,"title":{},"body":{"components/AlertComponent.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"classes/PlCoreUtils.html":{},"injectables/PlHttpService.html":{},"injectables/PlUtilsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vanno",{"_index":1000,"title":{},"body":{"index.html":{}}}],["var",{"_index":61,"title":{},"body":{"components/AlertComponent.html":{},"components/PlBaseComponent.html":{}}}],["variabile",{"_index":299,"title":{},"body":{"classes/PlCoreUtils.html":{},"index.html":{}}}],["variabili",{"_index":1060,"title":{},"body":{"index.html":{}}}],["variables",{"_index":1276,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varie",{"_index":691,"title":{},"body":{"index.html":{}}}],["vecchie",{"_index":666,"title":{},"body":{"index.html":{}}}],["vede",{"_index":1071,"title":{},"body":{"index.html":{}}}],["vedere",{"_index":1125,"title":{},"body":{"index.html":{}}}],["velocizzare",{"_index":775,"title":{},"body":{"index.html":{}}}],["vengono",{"_index":944,"title":{},"body":{"index.html":{}}}],["verificarsi",{"_index":1190,"title":{},"body":{"index.html":{}}}],["verificasse",{"_index":848,"title":{},"body":{"index.html":{}}}],["verr",{"_index":920,"title":{},"body":{"index.html":{}}}],["verranno",{"_index":349,"title":{},"body":{"injectables/PlGraphicService.html":{},"index.html":{}}}],["versione",{"_index":1247,"title":{},"body":{"index.html":{}}}],["verso",{"_index":902,"title":{},"body":{"index.html":{}}}],["via",{"_index":860,"title":{},"body":{"index.html":{}}}],["viene",{"_index":276,"title":{},"body":{"modules/PlCoreModule.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"index.html":{}}}],["viewchild('dialog",{"_index":43,"title":{},"body":{"components/AlertComponent.html":{}}}],["virtualizzare",{"_index":141,"title":{},"body":{"injectables/PLWorkerService.html":{},"index.html":{}}}],["virtualizzazione",{"_index":747,"title":{},"body":{"index.html":{}}}],["visualizzata",{"_index":769,"title":{},"body":{"index.html":{}}}],["visualizzazione",{"_index":1101,"title":{},"body":{"index.html":{}}}],["vita",{"_index":946,"title":{},"body":{"index.html":{}}}],["voglia",{"_index":1028,"title":{},"body":{"index.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"injectables/PlCacheMapService.html":{},"classes/PlCoreUtils.html":{},"injectables/PlGraphicService.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{},"injectables/PlUtilsService.html":{},"index.html":{}}}],["vuole",{"_index":642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["welcome",{"_index":662,"title":{},"body":{"index.html":{}}}],["window",{"_index":98,"title":{},"body":{"injectables/AlertService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["worker",{"_index":176,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["worker.service.ts",{"_index":125,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["workerfunction",{"_index":138,"title":{},"body":{"injectables/PLWorkerService.html":{}}}],["workerservice",{"_index":213,"title":{},"body":{"components/PlBaseComponent.html":{}}}],["xmlhttprequestresponsetype",{"_index":525,"title":{},"body":{"injectables/PlHttpService.html":{}}}],["y",{"_index":936,"title":{},"body":{"index.html":{}}}],["yes",{"_index":158,"title":{},"body":{"injectables/PLWorkerService.html":{},"components/PlBaseComponent.html":{},"classes/PlHttpRequest.html":{},"injectables/PlHttpService.html":{}}}],["zone.js",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":265,"title":{},"body":{"modules/PlCoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/pl-core-utils-library/src/lib/component/alert/alert.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert\n            \n\n            \n                styleUrls\n                ./alert.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialog\n                            \n                            \n                                    Public\n                                messageInfo\n                            \n                            \n                                    Public\n                                queueMessageInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n\n\n            \n                \n                    funzionalità per la chiusura della modale\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dialog')\n                            \n                        \n                    \n\n                \n                    \n                        riferimento al modale html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messageInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n                \n                    \n                        messaggio corrente processato dalla coda\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queueMessageInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        contenitore di messaggi\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{messageInfo.title || \\'Message!\\'}}                  ×                              {{messageInfo.body }}                    Ok            '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'PlBaseComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/component/alert/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                enableAlertMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAlertMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAlertMessage(enable: boolean)\n                \n            \n\n\n\n\n            \n                \n                    funzionalità per disabilitare il componente e ripristinare alert() nativo messo a disposizione da window.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    enable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheEntry.html":{"url":"interfaces/CacheEntry.html","title":"interface - CacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheEntry\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-cache-map.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entryTime\n                                \n                                \n                                        response\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entryTime\n                                    \n                                \n                                \n                                    \n                                        entryTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Observable.html":{"url":"interfaces/Observable.html","title":"interface - Observable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Observable\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/extension/custom-extension-rxjs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        polling\n                                \n                                \n                                        uuid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        polling\n                                    \n                                \n                                \n                                    \n                                        polling:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PLWorkerService.html":{"url":"injectables/PLWorkerService.html","title":"injectable - PLWorkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PLWorkerService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-worker.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                run\n                            \n                            \n                                    Public\n                                runUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            run\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    run(workerFunction: (input: any) => void, nameThred: string, initProcess: (undefined) => void, data?: any, singolInstance: boolean)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    workerFunction\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : promise da virtualizzare in un thread separato ..   non accetta arrow function\n\n                                    \n                                \n                                \n                                    nameThred\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : nome da assegnare al thread, utile per i log.\n\n                                    \n                                \n                                \n                                    initProcess\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : funzione richiamata al momento della partezza del processo ..   non accetta arrow function \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : oggetto contenente i parametri da passare alla funzione workerFunction, in caso di piu parametri , passare un JSON\n\n                                    \n                                \n                                \n                                    singolInstance\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        : valore booleano che indica se occorre creare un nuovo worker oppure utilizzare il gia presente, in caso fosse gia in esecuzione\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            runUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    runUrl(url: string, data?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlAmbientModeLoaderService.html":{"url":"injectables/PlAmbientModeLoaderService.html","title":"injectable - PlAmbientModeLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlAmbientModeLoaderService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-ambient-mode.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                browserIdentify\n                            \n                            \n                                detect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            browserIdentify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    browserIdentify()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         BROWSER\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detect\n                        \n                        \n                    \n                \n            \n            \n                \ndetect()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlBaseComponent.html":{"url":"components/PlBaseComponent.html","title":"component - PlBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlBaseComponent\n\n\n\n        \n            Info\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/pl-core-utils-library/src/lib/component/base-component/pl-base-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnInit\n                    DoCheck\n                    AfterContentInit\n                    AfterContentChecked\n                    AfterViewInit\n                    AfterViewChecked\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                data\n                            \n                            \n                                    Protected\n                                dataObs\n                            \n                            \n                                    Protected\n                                graphicService\n                            \n                            \n                                    Protected\n                                httpService\n                            \n                            \n                                    Protected\n                                networkService\n                            \n                            \n                                    Protected\n                                params\n                            \n                            \n                                    Protected\n                                paramsObs\n                            \n                            \n                                    Protected\n                                queryParams\n                            \n                            \n                                    Protected\n                                queryParamsObs\n                            \n                            \n                                    Protected\n                                route\n                            \n                            \n                                    Protected\n                                router\n                            \n                            \n                                    Protected\n                                utilsService\n                            \n                            \n                                    Protected\n                                workerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToPage\n                            \n                            \n                                ngAfterContentChecked\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToPage\n                        \n                        \n                    \n                \n            \n            \n                \ngoToPage(pageUrl: string, extras?: Object, queryParams?: Object)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url della pagina di destinazione\n\n                                    \n                                \n                                \n                                    extras\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Oggetto contenente direttire di rotta\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        parametri da passare alla pagina\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentChecked()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngDoCheck\n                        \n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            dataObs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            graphicService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlGraphicService\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            httpService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlHttpService\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            networkService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlNetworkService\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            paramsObs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryParamsObs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            utilsService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlUtilsService\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            workerService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PLWorkerService\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'PlBaseComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlCacheMapService.html":{"url":"injectables/PlCacheMapService.html","title":"injectable - PlCacheMapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlCacheMapService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-cache-map.service.ts\n        \n\n            \n                Description\n            \n            \n                stations/station-type?isSubMenu=1\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, res: HttpResponse)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlCoreModule.html":{"url":"modules/PlCoreModule.html","title":"module - PlCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PlCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlCoreModule\n\n\n\ncluster_PlCoreModule_declarations\n\n\n\ncluster_PlCoreModule_exports\n\n\n\ncluster_PlCoreModule_providers\n\n\n\n\nAlertComponent\n\nAlertComponent\n\n\n\nPlCoreModule\n\nPlCoreModule\n\nPlCoreModule -->\n\nAlertComponent->PlCoreModule\n\n\n\n\n\nPlBaseComponent\n\nPlBaseComponent\n\nPlCoreModule -->\n\nPlBaseComponent->PlCoreModule\n\n\n\n\n\nPlBaseComponent \n\nPlBaseComponent \n\nPlBaseComponent  -->\n\nPlCoreModule->PlBaseComponent \n\n\n\n\n\nPlAmbientModeLoaderService\n\nPlAmbientModeLoaderService\n\nPlCoreModule -->\n\nPlAmbientModeLoaderService->PlCoreModule\n\n\n\n\n\nPlHttpInterceptorMockService\n\nPlHttpInterceptorMockService\n\nPlCoreModule -->\n\nPlHttpInterceptorMockService->PlCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/pl-core-utils-library.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertComponent\n                        \n                        \n                            PlBaseComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AlertComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PlAmbientModeLoaderService\n                        \n                        \n                            PlHttpInterceptorMockService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PlBaseComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Routing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Routing()\n                \n            \n\n\n\n\n            \n                \n                    funzionalità per il reperimento del'intercettore di rotta.. in caso di NavigationStart, viene lanciato questo \nsubject. utile per terminare le richieste http\n\n\n                    \n                        Returns :     { getIinterrupt(): any; }\n\n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlCoreUtils.html":{"url":"classes/PlCoreUtils.html","title":"class - PlCoreUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlCoreUtils\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/pl-core-utils-library.service.ts\n        \n\n            \n                Description\n            \n            \n                classe di utilità, è possibile risalire alla lista delle progressbar e alla registrazione di eventi\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                progressBars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Broadcast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            progressBars\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         progressBarsInterface\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n                \n                    \n                        variabile contenente le progress di ajax down e upload \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Broadcast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Broadcast()\n                \n            \n\n\n\n\n            \n                \n                    metodi per il lancio di eventi , registrazione e cancellazione degli seìtesi .. \n\n\n                    \n                        Returns :     { execEvent(event: any, object: any): void; listenEvent(event: any, callBack: any): void; removeL...\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlGraphicService.html":{"url":"injectables/PlGraphicService.html","title":"injectable - PlGraphicService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlGraphicService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-graphic.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canvasToImg\n                            \n                            \n                                    Public\n                                dom2jpeg\n                            \n                            \n                                    Public\n                                domToCanvas\n                            \n                            \n                                    Public\n                                image2base64\n                            \n                            \n                                    Public\n                                svg2File\n                            \n                            \n                                    Public\n                                svgToImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(plHttpService: PlHttpService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        plHttpService\n                                                  \n                                                        \n                                                                        PlHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canvasToImg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canvasToImg(canvas: HTMLElement)\n                \n            \n\n\n\n\n            \n                \n                    Funzione che si occupa di scaricare un'immagine da un contenitore canvas, il canvas deve contenere un immagine non un html.\nquesta funzionalità puo essere usata in risposta a domToCanvas\nviene ritornata la URL del blob da poeter scaricare\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :oggetto canvas da scaricare   \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dom2jpeg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dom2jpeg(elementSVG: HTMLElement)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    elementSVG\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        elemento SVG dom da cattuare\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            domToCanvas\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    domToCanvas(elementoDom: HTMLElement, call: (canvas: HTMLElement) => void)\n                \n            \n\n\n\n\n            \n                \n                    Funzione per la creazione del canvas, contenente l'immagine del DOM referenziato. non verranno presi in considerazione\ntag SVG grafici. ma solo html semplice comprese le immagini\nla funzione restituisce in callback il canvas creato, in modo da poterlo aggiungere al dom o altro.\nmentre in observer torna la url da passare alla funaione di download\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    elementoDom\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : elemento dom da cattuare\n\n                                    \n                                \n                                \n                                    call\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : callback di ritorno dove iniettare il canvas creato.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            image2base64\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    image2base64(imageUrl: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            svg2File\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    svg2File(elementSVG: HTMLElement, nameFIle: string)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementSVG\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameFIle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            svgToImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    svgToImage(svgElement: HTMLElement, call: (undefined) => void)\n                \n            \n\n\n\n\n            \n                \n                    Funzionalita per la creazione di un immagine a partire da un svg. la funzione restituisce in callback un canvas eventualmente\nda mostrare a schermo e la url  del file in formato blob nell'osservable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    svgElement\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : svg element del dom\n\n                                    \n                                \n                                \n                                    call\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/PlHttpInterceptorMockService.html":{"url":"interceptors/PlHttpInterceptorMockService.html","title":"interceptor - PlHttpInterceptorMockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  PlHttpInterceptorMockService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/interceptor/pl-interceptor-mock.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pathMock: string, tagCache: string)\n                    \n                \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pathMock\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagCache\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlHttpRequest.html":{"url":"classes/PlHttpRequest.html","title":"class - PlHttpRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlHttpRequest\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/bean/Pl-http-request.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpHeaders\n                                \n                                \n                                    body\n                                \n                                \n                                    service\n                                \n                                \n                                    queryParams\n                                \n                                \n                                    pathParams\n                                \n                                \n                                    url\n                                \n                                \n                                    method\n                                \n                                \n                                    mocked\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(objectService: literal type, pathParams: JSON, queryParams: JSON, body: JSON | FormData | any, httpHeaders?: HttpHeaders)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        objectService\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pathParams\n                                                  \n                                                        \n                                                                    JSON\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                    JSON\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                    JSON | FormData | any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpHeaders\n                                                  \n                                                        \n                                                                        HttpHeaders\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpHeaders\n                    \n                \n\n                \n                    \n                        gethttpHeaders()\n                    \n                \n                    \n                        \n                                ritorna l'header passato\n\n\n                        \n                    \n\n                \n                    \n                        sethttpHeaders(object)\n                    \n                \n                    \n                        \n                                valorizza un header aggiuntivo\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n\n                \n                    \n                        getbody()\n                    \n                \n                    \n                        \n                                ritorna il body da passare a servizi come POST\n\n\n                        \n                    \n\n                \n                    \n                        setbody(object: any)\n                    \n                \n                    \n                        \n                                valorizzazione del body da passare a chiamate di tipo POST ad esempio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n\n                \n                    \n                        setservice(object: literal type)\n                    \n                \n                    \n                        \n                                ogetto raffigurante i parametri base del servizio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                            \n                                                                        literal type\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        queryParams\n                    \n                \n\n                \n                    \n                        getqueryParams()\n                    \n                \n                    \n                        \n                                ritorna l'oggetto contenente i query params da passare al servizio\n\n\n                        \n                    \n\n                \n                    \n                        setqueryParams(object)\n                    \n                \n                    \n                        \n                                oggetto contenete i parametri da passare in query string per chiamate GET ad esempio\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        pathParams\n                    \n                \n\n\n                \n                    \n                        setpathParams(object)\n                    \n                \n                    \n                        \n                                oggetto contenente i path params per valorizzare la url\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                    \n                        \n                                ritorna la url, valorizzata con in path params passati, in caso non siano presenti\nviene passassata la url senza essere riadattata.\n\n\n                        \n                    \n\n                \n                    \n                        seturl(url: string)\n                    \n                \n                    \n                        \n                                viene valorizzata la url da richiamare\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        method\n                    \n                \n\n                \n                    \n                        getmethod()\n                    \n                \n                    \n                        \n                                ritorna il metodo invocato\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mocked\n                    \n                \n\n                \n                    \n                        getmocked()\n                    \n                \n                    \n                        \n                                indica se il servizio è un mock oppure no\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlHttpService.html":{"url":"injectables/PlHttpService.html","title":"injectable - PlHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlHttpService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-http.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CREATEBLOB\n                            \n                            \n                                DELETE\n                            \n                            \n                                DESTROYBLOB\n                            \n                            \n                                DOWNLOAD\n                            \n                            \n                                DOWNLOADURL\n                            \n                            \n                                FORKJOIN\n                            \n                            \n                                GET\n                            \n                            \n                                nativeHttp\n                            \n                            \n                                PATCH\n                            \n                            \n                                POST\n                            \n                            \n                                PUT\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            CREATEBLOB\n                        \n                        \n                    \n                \n            \n            \n                \nCREATEBLOB(streamData: ArrayBuffer, applicationType: CONTENT_TYPE)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    streamData\n                                    \n                                            ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    applicationType\n                                    \n                                                CONTENT_TYPE\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        CONTENT_TYPE.PDF\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            DELETE\n                        \n                        \n                    \n                \n            \n            \n                \nDELETE(plHttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (id?: string) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plHttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            DESTROYBLOB\n                        \n                        \n                    \n                \n            \n            \n                \nDESTROYBLOB(blobUrl: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blobUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            DOWNLOAD\n                        \n                        \n                    \n                \n            \n            \n                \nDOWNLOAD(streamData: ArrayBuffer, contentType: CONTENT_TYPE | string, fileName?: string)\n                \n            \n\n\n\n\n            \n                \n                    l.piciollo\nfunzione per il download dello straming in formato file, viene prototipato in ambientService\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    streamData\n                                    \n                                            ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        array buffer\n\n                                    \n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        tipo di contenuto\n\n                                    \n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            DOWNLOADURL\n                        \n                        \n                    \n                \n            \n            \n                \nDOWNLOADURL(url: string, filename: string)\n                \n            \n\n\n\n\n            \n                \n                    l.piciollo\nsi occupa di effettuare il download di un file contenuta nel blob creato con le altre funzionalità\nfunzionalità utilizzabile in combinazione con le funzione di creazione image o file\nè possibile effettuare anche il download di un file in rete, passando il link al file\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        : url del blob\n\n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"download_temp\"\n                                    \n\n                                    \n                                        : nome file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            FORKJOIN\n                        \n                        \n                    \n                \n            \n            \n                \nFORKJOIN(plHttpRequest: Array, interrupt?: Subject)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plHttpRequest\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GET\n                        \n                        \n                    \n                \n            \n            \n                \nGET(plHttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (id?: string) => void)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    plHttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        oggetto contenente parametri da passare al servizio di chiamata alla rete\n\n                                    \n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        tipo di risposta attessa (RESPONSE_TYPE|String|null)\n\n                                    \n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        interrupt di servizio aggiuntivo, per killare i processi di chiamata (Subject|null)\n\n                                    \n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        tipo di contentuto inviato al BE (CONTENT_TYPE|String|null)\n\n                                    \n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        callback per ricavare l'instanza della request creata, utile per risalire ai progressi della request inplCoreUtilsLibraryService.progressBars\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nativeHttp\n                        \n                        \n                    \n                \n            \n            \n                \nnativeHttp(plHttpRequest: PlHttpRequest, responseType?: XMLHttpRequestResponseType, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (id?: string) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plHttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                            XMLHttpRequestResponseType\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PATCH\n                        \n                        \n                    \n                \n            \n            \n                \nPATCH(plHttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (id?: string) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plHttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            POST\n                        \n                        \n                    \n                \n            \n            \n                \nPOST(plHttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (id?: string) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plHttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PUT\n                        \n                        \n                    \n                \n            \n            \n                \nPUT(plHttpRequest: PlHttpRequest, responseType?: RESPONSE_TYPE, interrupt?: Subject, contentType?: CONTENT_TYPE | string, callBack?: (id?: string) => void)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plHttpRequest\n                                    \n                                                PlHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseType\n                                    \n                                                RESPONSE_TYPE\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    interrupt\n                                    \n                                            Subject\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                CONTENT_TYPE | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    callBack\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlNetworkService.html":{"url":"injectables/PlNetworkService.html","title":"injectable - PlNetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlNetworkService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-network.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLocalHttpHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLocalHttpHeaders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocalHttpHeaders()\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlUtilsService.html":{"url":"injectables/PlUtilsService.html","title":"injectable - PlUtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlUtilsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/service/pl-utils.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                binaryFind\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                stopTraceSizeWindow\n                            \n                            \n                                    Public\n                                traceSizeWindow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopTraceSizeWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopTraceSizeWindow()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            traceSizeWindow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    traceSizeWindow()\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            binaryFind\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function (input: any): Promise {\n    return new Promise((ok, ko) => {\n      let minIndex = 0;\n      let maxIndex = input.arr.length - 1;\n      let currentIndex;\n      let currentElement;\n      while (minIndex  input.searchElement) {\n          maxIndex = currentIndex - 1;\n        } else {\n          ok(currentIndex);\n          return currentIndex;\n        }\n      }\n      ok(-1);\n      return -1;\n    })\n  }\n                        \n                    \n\n                \n                    \n                        \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subscriber.html":{"url":"interfaces/Subscriber.html","title":"interface - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Subscriber\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/extension/custom-extension-rxjs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        uuid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @fortawesome/fontawesome-free : ^5.15.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.2.1\n        \n            @ngx-translate/core : 11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            angular2-uuid : ^1.1.1\n        \n            bootstrap : ^4.6.0\n        \n            chart.js : ^2.9.4\n        \n            chartjs-plugin-annotation : ^0.5.7\n        \n            core-js : ^2.6.12\n        \n            gulp-sass : ^3.1.0\n        \n            html2canvas : ^1.0.0-rc.5\n        \n            jquery : ^3.5.1\n        \n            jquery-dialog : ^0.5.2\n        \n            ngx-ui-loader : ^7.2.2\n        \n            node-sass : ^5.0.0\n        \n            pl-core-utils-library : file:projects/pl-core-utils-library\n        \n            pl-schematics : ^2.2.5\n        \n            popper.js : ^1.16.0\n        \n            rx : ^4.1.0\n        \n            rxjs : ~6.3.3\n        \n            rxjs-compat : ^6.5.3\n        \n            rxjs-operators : ^1.1.3\n        \n            sonar-scanner : ^3.1.0\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AmbientModeProviderFactory   (projects/.../AmbientModeProvider.ts)\n                        \n                        \n                            PLDelay   (projects/.../decordator.ts)\n                        \n                        \n                            PLFormatDate   (projects/.../decordator.ts)\n                        \n                        \n                            PLNumberFormat   (projects/.../decordator.ts)\n                        \n                        \n                            PLPermission   (projects/.../decordator.ts)\n                        \n                        \n                            PLTraceHooks   (projects/.../decordator.ts)\n                        \n                        \n                            PLTraceMethod   (projects/.../decordator.ts)\n                        \n                        \n                            PLUnsubscribe   (projects/.../decordator.ts)\n                        \n                        \n                            polling   (projects/.../custom-extension-rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/pl-core-utils-library/src/lib/initializer/AmbientModeProvider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            AmbientModeProviderFactory\n                        \n                        \n                    \n                \n            \n            \n                \nAmbientModeProviderFactory(ambientModeService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ambientModeService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/pl-core-utils-library/src/lib/decorator/decordator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PLDelay\n                        \n                        \n                    \n                \n            \n            \n                \nPLDelay(milliseconds)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    milliseconds\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLFormatDate\n                        \n                        \n                    \n                \n            \n            \n                \nPLFormatDate(format, local: string, localeId: string)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    format\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    local\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    localeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \nPLNumberFormat(format)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    format\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :FORMAT_NUMBER|dstring  indica il formato di numero che si vuole ricevere Es. it_IT  \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        String format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLPermission\n                        \n                        \n                    \n                \n            \n            \n                \nPLPermission(enabled)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    enabled\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLTraceHooks\n                        \n                        \n                    \n                \n            \n            \n                \nPLTraceHooks(disabled)\n                \n            \n\n\n\n\n            \n                \n                    \n/**\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    disabled\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Array cicli kook da non tracciare nei log \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLTraceMethod\n                        \n                        \n                    \n                \n            \n            \n                \nPLTraceMethod()\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            PLUnsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nPLUnsubscribe(ignore: [])\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignore\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ClassDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/pl-core-utils-library/src/lib/extension/custom-extension-rxjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            polling\n                        \n                        \n                    \n                \n            \n            \n                \npolling(everyTime, forTime, interrupt)\n                \n            \n\n\n\n\n            \n                \n                    \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    everyTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interrupt\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWelcome to pl-core-utils-library!\nLibreria core di supporto per nuove e vecchie applicazioni, si occupa di esporre allo sviluppatore, diversi servizi gia pronti e collaudati che si occupano di gestire tutto il flusso di controllo sulla navigazione di pagine, servizi di rete e tanto altro come intercettare il browser utilizzato e di specializzare altre funzionalità eventualmente mancanti per il tipo di browser. All'interno del pacchetto è presente la documentazione che illustra le varie funzionalità del pacchetto.\nFeature\n\nServizi di rete per chiamte ajax, tutti i metodi esposti possono essere dismessi, in modo da non lasciare appese le chiamate ajax come ad esempio il cambio di rotta applicativo, o altro.\n\nservizio di cache di rete, viene gestita in autonomia la storicizzazione della cache per le chiamate configurate. è possibilità tramite questo servizio risalire alla cache evitando ulteriori chiamate al BE\n\ncomponente per la mostra delle progressioni o avanzamenti in atto, richiamando la sua apertura è possibile risalire a tutti i processi background al mmomento attivi e killare la loro esecuzione uono ad uno\n\nServizio di intercettazione del browser, è in grado di innescare il processo di autenticazione del sistema ospitante e installare funzionalita aggiuntive in base al sistema. Ad esempio stando su IE viene adattato il meccanismo di download dei file,in quanto il comportamento è diverso da browser in browser\n\nSupporto per il blocco browser dichiarati non compatibili, il blocco viene automaticamente al momento dello startup applicativo\n\nAggiunto supporto per virtualizzazione di processo complesso. Possibilita di virtualizzare i processi pesanti in modo che non impattano le performance applicative\n\nAggiunte funzionalita grafiche, come screenshot della pagina\n\nAggiunto sistema di intercettazione realtime per il controllo della dimensione della pagina, per identificare le sue dimensioni\n\nInserimento automatido di nuove funzionalità per le stringhe, array e json\n\nServizio per reperire informazioni dall'header della pagina correntemente visualizzata.\n\nClasse di utilita per funzionalità come la ricerca binaria\n\nAggiunti decoratori di utilità per velocizzare processi di conversione o inibizione dei component DOM\n\nServizio di Mock, possibilità di eseguire in autonomina simulazioni di chiamata alla rete\n\nAggiunte funzionalita lato rete per la creazione di BLOB e la rimozione dello stesso.\n\nCreazione di BaseComponent, la sua extension permette di inglobbare tutti i servizi pronti e disponibili, inoltre riceve i parametri di rotta\n\nModifcata interfaccia RxJs per l'inserimento di una funzionalita, polling, per richiamare il BE in modo iterativo in base alle configurazioni.\n\n\nChiamate HTTP\nIl sistema viene equipagiato con servizi utili per le chiamate al BE, tali chiamate hanno la possibilità di essere terminate in caso di determinati eventi\ncallMock(p1: any, p2: any): Observable {\n    return new Observable(obs => {\n        let plHttpRequest: PlHttpRequest = new PlHttpRequest(\n            environment.http.api.mock,\n            Object({ api: \"api\", files: \"files\" }),\n            Object({ api: p1, files: p2 }),\n            null);\n    this.httpService.GETFILE(plHttpRequest, RESPONSE_TYPE.ARRAYBUFFER, (idAjax => {\n        setTimeout((id) => {\n           PlCoreUtils.progressBars[id].interrupt.next(true);\n        }, 10,idAjax);\n    }), null).subscribe(sb => {\n    obs.next(sb);\n    obs.complete()\n    }, error => {\n        obs.error(error);\n    }, () => { })\n    })\n}in questo esempio si termina il servizio dopo 10 millisecondi, ovviamente in caso di un download di file, questo termina lo scaricamento dello stesso. L'evento di termine puo essere anche avviato diversamente, tramite un pulsante ad esempio.\nE' possibile dichiarare url contenenti dei pathParams, il sistema provvederò in autonomia alla sua valorizzazione.\nmock: {\n    url: \"@cachable@/example/:api/:files\",\n    mocked: true,\n    method:\"GET\"\n}passando l'oggetto sopra al plHttpRequest, questo provvederà in autonomia a sostituire i valori dei parametri, con ad esempio \"api e \"files\"\nlet plHttpRequest: PlHttpRequest = new PlHttpRequest(\n    environment.http.api.mock,\n    Object({ api: \"api\", files: \"files\" }),\n    Object({ api: p1, files: p2 }),\n    null);\nsi avverte che le chiavi dell'oggetto contenente i valori da impostare nei pathparams, deve essere lo stesso del pathparam stesso con l'esclusione dei \":\", in caso non si verificasse questo match.. la sostituzione non avverà, con la conseguente mal formattazione della URL.\n\nEsempio abilitazione cache delle chiamate di rete\nil sistema come gia detto mette a disposizione anche un servizio di cache, per evitare appesantimenti di rete, per via di chiamate repentine al BE che hanno stessa request ed ovviamente stessa response. per la configurazione della cache è opportuno inserire una semplice annotazione nella url del servizio.\n/**\n    @author l.piciollo\n    si riporta un esempio di una api riconosciuta come storable, grazie al tag @cachable@ presente nella URL.\n    si nota come i parametri sono passati con {0} e {1}.. il sistema è equipagiato da una funzionalita che specializza\n    le stringhe ad avere il format function.. quindi .. è possibile formattare la url richimandola in questo modo:\n    E.S.\n    let url = environment.exampleApi.format(\"P1\",\"P2\")\n    quindi avviene una formattazione per posizione dei paraetri..\n    exampleApi: `@cachable@/example/cacable/api?param1={0}&param2={1}`\n*/\nexampleApi: `@cachable@/example/cache/api?param1={0}&param2={1}`,\nexampleApeNoCache: `example/no/cache/api?param1={0}&param2={1}`\ncome si può notare, alla url è stato anteposto il @cachable@ , questo sta ad indicare che la url dovrà essere sottoposta al motore di cache sia in chiamata verso la rete che in risposta verso il client.\n\n\ndi default il tag da inserire è @cacable , si puo sostituire con qualsiasi valore, configurando opportunamente il servizio nel modulo di avvio dell'applicazione.\n\n{ provide: MAX_CACHE_AGE, useValue: 300000 },\n{ provide: CACHE_TAG, useValue: \"@cachable@\" }\n\ncome per il tag, è possibile anche configurare il tempo valido per la cache.. scaduto il tempo la chiamata verrà eliminata dalla cache in modo da poter poi richiedere al BE nuovi aggiornamenti\n\nEsempi decoratori\n/**\n    conversione automatica della data il campo prendera\n    automaticamente il formato standard FULLDATE >> 'EEEE, MMMM d, y'\n*/\n@PLFormatDate(FORMAT_DATE.FULLDATE)\nprivate campoData: Date = new Date()\n\n\n/**\n    abilitazione del trace log dei cicli di hook delle classi,\n    vengono loggati tutti i cicli di vita del componente\n*/\n@PLTraceHooks( )\nexport class AppComponent\n\n/**\n    eliinatzione dei sottoscrittori in modo automatico al momento del'ondestroy\n    del componente,in questo modo di hanno gli unsubscriber automatici di tutti i\n    sottoscrittori creati per quel componente . E' possibile elencare gli osservatori da non\n    prendere in considerazione\n*/\n@PLUnsubscribe(ignore = [])\nexport class AppComponent\n\n/**\n    decoratore configurabile, se attivato, inibisce la creazione di componenti DOM in base a\n    dei parametri lanciare\n    document.dispatchEvent(new CustomEvent('PL:SET-PERMISSION', { detail\n    [PROFILO1,PROFILO2,PROFILO3,...] }));\n    inserire nel DOM \"\n    e al decoratore passare @PLPermission(true)\n    l'elemento del dom viene elininato in quanto non contiene il permesso READONLY.\n*/\n\n@PLPermission(environment.production)\nexport class AppComponent\n\n/**\n    esempio di funzionalita ritardata, la sua esecuzione avviene in modalita\n    observer e dopo 3 secondi dalla sua chiamata.\n*/\n\n//dichiarare una funzione come sotto\n@PLDelay(3000)\npublic log(){..}\n\n\n/**\n    per utilizzare la funzione di log, occorre sottoscriversi alla sua esecuzione in\n    una funzioa\n*/\nlog.subscribe(response=>{ ... })Esempi di funzionalità aggiuntive\nil codice viene corredato di funzionalità aggiuntive per String , Array, JSON si riporta un esempio di chiamata\nlet user = {\n    nome:\"Luca\" ,\n    cognome: \"Pic\"\n}\n\nuser=JSON.changeValuesByKey(user,\"cognome\",\"Piciollo\");\nconsole.log(user);\nVerrà stampato l'oggetto - {nome : \"Luca\" , cognome: \"Piciollo\" }\n\n\nLe altre funzionalità vanno utilizzate allo stesso modo\n\nString {\n    format: (...params) => string;\n    isNullOrEmpty: (val: string) => boolean;\n    truncateUrlIfNoParams: (val: any) => string;\n    truncateUrlCache: (val: any) => string;\n}\n\n\n\nArray {\n    moveDown: (from) => void;\n    moveTo: (from, to) => void;\n    moveUp: (from) => void;\n    delete: (position) => void;\n    differences: (items) => Array;\n    inArray: (item) => Number;\n    insert: (index: number, item: any) => void;\n}\n\n\n\nJSON {\n    changeValues: (json,previousValue, nextValue) => any;\n    changeValuesByKey: (json,key, nextValue) => any;\n    findByValue: (json, value) => any;\n    json2flat: (json) => any;\n    json2array: (json) => any;\n    json2flatObj: (json) => any;\n    findKey: (json, keyFind) => any;\n}Esempio mock servizio\nViene mostrato come abilitare il mock di un servizio di BE, utile in caso si voglia simulare la risposta di un servizio ancora in fase di sviluppo\n/**\n    esempio di chiamata http\n*/\n\ncallMock(p1: any, p2: any): Observable {\n    return new Observable(obs => {\n        let plHttpRequest: PlHttpRequest = new PlHttpRequest(\n        environment.http.api.mock ,\n        Object({ api: \"api\", files: \"files\" }),\n        Object({ api: p1, files: p2 }),\n        null);\n\n    this.httpService.GETFILE(plHttpRequest, RESPONSE_TYPE.ARRAYBUFFER, null, null).subscribe(sb => {\n        obs.next(sb);\n        obs.complete()\n    }, error => {\n         obs.error(error);\n     }, () => { })\n  })\n}dichiarare nel file di properties un oggetto cosi dichiarato,\n\napi esposta a scopo illustrativo\n\n/**\n    @author l.piciollo\n    è possibile dichiarare una chiamata ad un mock, si consiglia di rispettare il seguente formato dichiarativo\n    E.S.\n    mock: {\n        url: \"@cachable@/example/:api/:files\",\n        mocked: true,\n        method:\"GET\"\n    }\n    il mock a true, impone al sistema di risalire alla folder                     \n    assets/public/mock/example/no/cache/api/122 e prelevare il\n    json relativo al metodo utilizzato.. quindi post||get||put||delete||patch .json\n*/\n\nmock: {\n    url: \"@cachable@/example/:api/:files\",\n    mocked: true,\n    method:\"GET\"\n}creare una struttura di cartelle per ospitare i file stub. La struttura deve essere posta a partire dal path assets e deve avere cartelle e sottocartelle come il path della url, ovviamente escludendo i queryparams.\n\nper chiamate di tipo GET : assets/public/mock/ example/:api/:file/get.json\n\nper chiamate di tipo POST: assets/public/mock/ example/:api/:file/**post.json\n\n\n\ni path url possono contenere variabili indicate con :nome, il sistema intercetterà automaticamente i path params e sostituira autonomamente questi valori con i valori dei path params passati nella request.\n\n\nEs.\n\nlet plHttpRequest: PlHttpRequest = new PlHttpRequest( environment.http.api.mock , Object({ api: \"api\", files: \"files\" }), Object({ api: p1, files: p2 }), null);le chiamate http necessitano in ingresso dell'oggetto plHttpRequest, il quale contiene la url da richiamare, i query params , del body params e del pathParams. Nell'esempio sopra, si vede che l'oggetto contiene Object({ api: \"api\", files: \"files\" }), le chiavi dell'oggetto devono corrispondere con il nome del path param e il valore, sarà quello che effettivamente sostituirà il nome.\ne cosi per gli altri metodi\n\nè possibile anche mockare servizi con url contenenti path params, ad esempio /example/:id , in questo caso creare comunque l'alberatura sopra citata, escludendo i : nel nome della folder.\n\n\nè possibile cambiare il path di riferimento dei file di mock, ma che comunque siano sempre sotto assets, occorre aggiungere nel modulo di avvio la seguente istruzione\n\n/**\n    inizializzazione del path per reperire gli stub json di risposta al mock\n*/\n\n{ provide: DEFAULT_PATH_MOCK, useValue: \"nuovo/path\" }Alcune funzionalità utili\nE' possibile avvalersi di alcune funzionalità utili come la gestione delle immagini. Si riportano le funzionalità messe a disposizione per la gestione della grafica\n/**\n    si occupa di convertire un immagine esposta tramite blob url, in formato base 64\n    @param imageUrl\n*/\n\npublic image2base64(imageUrl: string): Promise\n\n/**\n    Funzione che esporta l'intero elemento svg in un file per la visualizzazione in un browser,\n    verrà mantenuto fedelmente il costrutto\n    dell'elemento SVG\n    @param elementSVG : elemento svg da elaborare\n    @param nameFIle : nome del file da salvare\n*/\n\npublic svg2File(elementSVG: HTMLElement, nameFIle: string): Observable\n\n/**\n    Funzine per la creazione del jpeg partendo da un dom.\n    l'osservatore ritorna il link all'immagine per il download\n    @param elementSVG elemento SVG dom da cattuare\n*/\n\npublic dom2jpeg(elementSVG: HTMLElement): Observable\n\n/**\n    Funzione per la creazione del canvas, contenente l'immagine del DOM referenziato. non verranno presi in considerazione\n    tag SVG grafici. ma solo html semplice comprese le immagini\n    la funzione restituisce in callback il canvas creato, in modo da poterlo aggiungere al dom o altro.\n    mentre in observer torna la url da passare alla funaione di download\n    @param elementoDom : elemento dom da cattuare\n    @param call : callback di ritorno dove iniettare il canvas creato.\n*/\n\npublic domToCanvas(elementoDom: HTMLElement, call: (canvas: HTMLElement) => void): Observable\n\n\n\n/**\n    Funzione che si occupa di scaricare un'immagine da un contenitore canvas, il canvas deve contenere un immagine non un html.\n    questa funzionalità puo essere usata in risposta a domToCanvas\n    viene ritornata la URL del blob da poeter scaricare\n    @param canvas :oggetto canvas da scaricare\n*/\n\npublic canvasToImg(canvas: HTMLElement): Observable\n\n\n\n/**\n    Funzionalita per la creazione di un immagine a partire da un svg. la funzione restituisce in callback un canvas eventualmente\n    da mostrare a schermo e la url del file in formato blob nell'osservable\n    @param svgElement : svg element del dom\n    @param callBack : funzione di ritorno per la consegna del canvas\n*/\n\npublic svgToImage(svgElement: HTMLElement, call: (canvas) => void): ObservableEsempio message alert()\nIntrodotto un sistema di alert() custom, al momento della chiamata alla funzione alert() di window.. verrà scatenata una routine, che mostrerà una finestra di dialogo modale in formato bootstrap.  La funzionalità è nata per velocizzare la chiamata ad un message .\nshowMessage(){\n    alert(title,message);\n}  \ncome si puo vedere l'utilizzo della funzionalità è molto semplice e immediata.\nE' possibile ritornare alla funzionalità predefinita di window, semplicemente disabilitandola.\n constructor(private alertService: AlertService) {\n     this.alertService.enableAlertMessage(false);\n }PlBaseComponent\nComponente nato per essere esteso, mette a disposizione funzionalità utili per la navigazione tramite routing. Qui è possibile passare parametri anche complessi via URL, dato che questi vengono codificate\n/** chiamata a menu con passaggio di parametri */\nexport class HomeComponent extends PlBaseComponent{\n    go() {\n        this.goToPage(\"home/menu\", null, { P1: \"param1\", p2: { param2: \"param2\" }, p3: { param3: \"param3\" } });\n    }\n}\n\n/** lettura dei parametri arrivati */\nexport class MenuComponent extends PlBaseComponent{\n    ngOnInit() {\n        console.log(this.queryParams )\n        console.log(this.data )\n        console.log(this.params)\n    }       \n}\nES: http://localhost:4200/#/home?OBJ=eyJob21lMSI6ImNpYW8iLCJob21lMiI6ImNpYW8ifQ%3D%3D\n\nRxjs polling ed uuid\nTutti gli oservatori ora godono della nuova funzionalità di polling. Questa è utile specialmente a livello di chiamata HTTP su servizi di BE. La funzionalità si occupa di effettuare a ciclo continuo, ma configurando le condizioni, la richiesta all'observer di replicare nuovamente il suo funzionamento. QUindi applicato ad una chiamata rest, la stessa viene ripetuta fino al raggiungimento della condizione stabilita.\n\n  polling(everyTime: number, forTime?: number, interrupt?: Subject = new Subject()): Subject\n\nPer richiamare tale funzionalità occorre passare l'intervallo di tempo tra una ripetizione e l'altra, il valore che indica per quanto tempo deve essere attivo il polling, in millisecondi, indicare 0 per un ciclo infinito e in fine l'interrupt, un evento che al verificarsi blocca il processo di polling.\nE' obbligatorio inserire oltre al everyTime, uno dei due parametri successivamente richiesti.\n/**\n* chiamata ad un servizio rest ogni secondo per un tempo complessivo di 6 secondi\n* il polling si interrompe in caso di riscontro di un cambio rotta di navigazione del portale.\n* Attenzione, la chiamata REST deve essere di tipo background altrimenti la GET semplice viene interrotta\n* al cambio rotta, quindi usare la GETBG o le altre, purche siano ..BG\n*/\nlet caller = .polling(1000,6000, PlCoreModule.Routing().getIinterrupt() )).subscribe(\n  val => console.log(val ),\n  error => { console.error(error )},\n  () => alert(caller.uuid)\n)\n  Attenzione: se il polling viene scatenato da un osservatore di tipo of(1,2,3), questo avrà effetto solo sul primo elemento e cioè 1. il polling è nato per osservatori che producono valori da un solo processo, come le chiamate a servizi di BE.. quindi non applicare ad osservatori come Timer, Interval o operatori simili.\n\nCome si vede dal codice ogni osservatore o subscriber ha la proprietà uuid, la stessa viene valorizzata in automatico al momento della sua creazione. è possibile risalire ad essa semplicemente assegnando ad una variabile l'osservatore e prelevare il suo uuid\nlet caller= ;\nconsole.log(caller.uuid)Opzioni configurabili\nè possibile procedere alla configurazione personale di alcuni servizi, come ad esempio il tag cache la durata della validità della stessa. Le configurazioni al momento disponibili sono\n\n{ provide: BROWSER_VALID, useValue: [BROWSER.ALL] },\n\n\n{ provide: DISABLE_LOG, useValue: false },\n\n\n{ provide: MAX_CACHE_AGE, useValue: 300000 },\n\n\n{ provide: CACHE_TAG, useValue: \"@cachable@\" },\n\n\n{ provide: DEFAULT_PATH_MOCK, useValue: \"public/mock\" }\n\nIn questa versione\nQuesta versione della lib, contiene tutte le fix effettuate nelle precedenti e in piu, viene migliorata introducendo\n\nEliminazione della funzionalità per la visualizzazione della progress bar per il monitoring dello stato ajax\nla funzionalità è stata portata nella pl-http-progress-dialog quindi:\n\n\nnpm i pl-http-progress-dialog\n\nTutte le precedenti funzionalità sono rimaste invariate.\nDocumentazione online\nQui è possibile fare riferimento alla documentazione on line delle libreria e delle sue funzionalità  \nAuthor\nCreated by @l.piciollo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PlCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlCoreModule\n\n\n\ncluster_PlCoreModule_declarations\n\n\n\ncluster_PlCoreModule_exports\n\n\n\ncluster_PlCoreModule_providers\n\n\n\n\nAlertComponent\n\nAlertComponent\n\n\n\nPlCoreModule\n\nPlCoreModule\n\nPlCoreModule -->\n\nAlertComponent->PlCoreModule\n\n\n\n\n\nPlBaseComponent\n\nPlBaseComponent\n\nPlCoreModule -->\n\nPlBaseComponent->PlCoreModule\n\n\n\n\n\nPlBaseComponent \n\nPlBaseComponent \n\nPlBaseComponent  -->\n\nPlCoreModule->PlBaseComponent \n\n\n\n\n\nPlAmbientModeLoaderService\n\nPlAmbientModeLoaderService\n\nPlCoreModule -->\n\nPlAmbientModeLoaderService->PlCoreModule\n\n\n\n\n\nPlHttpInterceptorMockService\n\nPlHttpInterceptorMockService\n\nPlCoreModule -->\n\nPlHttpInterceptorMockService->PlCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/progressBarsInterface.html":{"url":"interfaces/progressBarsInterface.html","title":"interface - progressBarsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  progressBarsInterface\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/pl-core-utils-library/src/lib/pl-core-utils-library.service.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BROWSER_VALID   (projects/.../pl-ambient-mode.service.ts)\n                        \n                        \n                            CACHE_TAG   (projects/.../pl-cache-map.service.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            DEFAULT_PATH_MOCK   (projects/.../pl-interceptor-mock.service.ts)\n                        \n                        \n                            DISABLE_LOG   (projects/.../pl-ambient-mode.service.ts)\n                        \n                        \n                            MAX_CACHE_AGE   (projects/.../pl-cache-map.service.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            window   (projects/.../pl-ambient-mode.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/pl-core-utils-library/src/lib/service/pl-ambient-mode.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BROWSER_VALID\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken>('browser validi')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLE_LOG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken>('disabilita log')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/pl-core-utils-library/src/lib/service/pl-cache-map.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CACHE_TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('tag identificativo per le richieste http')\n                        \n                    \n\n                \n                    \n                        } \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_CACHE_AGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('DefaulTimeOut for cache')\n                        \n                    \n\n\n            \n        \n\n    projects/pl-core-utils-library/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    projects/pl-core-utils-library/src/lib/interceptor/pl-interceptor-mock.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PATH_MOCK\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Defaul path for retrieve mock json')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
